package defpackage;

import android.content.UriMatcher;
import com.spotify.mobile.android.cosmos.player.v2.PlayerProviders;
import com.spotify.mobile.android.spotlets.appprotocol.model.AppProtocol.TrackData;
import com.spotify.mobile.android.util.LinkType;
import java.util.ArrayList;
import java.util.List;

/* renamed from: jud reason: default package */
public final class jud {
    private static final List<juc> a = new ArrayList();
    private static final UriMatcher b = new UriMatcher(-1);

    static {
        String str = "spotify:open";
        a.add(new a("activate").a("spotify:").a(str).b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:open)$").a(LinkType.ACTIVATE).a(true).c(null).d("This URI causes the application to start or come forward as if opened by the user. It has no other semantics.").e(str).e("https://open.spotify.com/open").e("http://open.spotify.com/open").e("SPOTIFY:open").f("spotify:OPEN").a());
        a.add(new a("activate_premium_trial").a("spotify:internal:activate_premium_trial").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:activate_premium_trial)$").a(LinkType.ACTIVATE_PREMIUM_TRIAL).a(false).c(null).d(null).a());
        a.add(new a(PlayerProviders.ADS).a("spotify:ad:{ad_id as text}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:ad:[^:_#]+)$").a(LinkType.AD).a(false).c(null).d(null).a());
        String str2 = "add_to_playlist";
        a.add(new a(str2).a("spotify:add_to_playlist").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:add_to_playlist)$").a(LinkType.ADD_TO_PLAYLIST).a(false).c(null).d(null).a());
        a.add(new a("ads_mic_permissions").a("spotify:internal:ads:mic-permissions").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:ads:mic-permissions)$").a(LinkType.ADS_MIC_PERMISSIONS).a(false).c("Cream NASA").d("Uri for user prompt for microphone permissions").a());
        String str3 = "High Intent";
        a.add(new a("album").a("spotify:album:{album_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:album:[a-zA-Z0-9]{22})$").a(LinkType.ALBUM).a(true).c(str3).d("The overview page for a specific album").e("spotify:album:4EWxPTF5Vow6tzSCXRkmoo").e("spotify:album:3PqM9z7i2KWX7ZXfuSMvGG").e("https://open.spotify.com/album/3PqM9z7i2KWX7ZXfuSMvGG").f("spotify:album:").f("spotify:album:bad").f("spotify:album:3PqM9z7i2KWX7ZXfuSMv_G").a());
        a.add(new a("album_autoplay").a("spotify:album:{album_id as Base62}:play").a("spotify:album:{album_id as Base62}:play:{track_id as Base62}").a("spotify:album:{album_id as Base62}:play:track:{track_id as Base62}").a("spotify:album:{album_id as Base62}:play:episode:{episode_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:album:[a-zA-Z0-9]{22}:play|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:album:[a-zA-Z0-9]{22}:play:[a-zA-Z0-9]{22}|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:album:[a-zA-Z0-9]{22}:play:track:[a-zA-Z0-9]{22}|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:album:[a-zA-Z0-9]{22}:play:episode:[a-zA-Z0-9]{22})$").a(LinkType.ALBUM_AUTOPLAY).a(false).c(null).d(null).a());
        a.add(new a("album_radio").a("spotify:radio:album:{album_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:radio:album:[a-zA-Z0-9]{22})$").a(LinkType.ALBUM_RADIO).a(false).c(null).d(null).a());
        a.add(new a("anchor_funnel").a("spotify:internal:anchorfunnel:home").a("spotify:internal:anchorfunnel:yourlibrary").a("spotify:internal:anchorfunnel:quicksilver").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:anchorfunnel:home|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:anchorfunnel:yourlibrary|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:anchorfunnel:quicksilver)$").a(LinkType.ANCHOR_FUNNEL).a(false).c("scrabble").d("Uri for the Anchor Funnel experiment").a());
        a.add(new a("annotate_discard_changes").a("spotify:annotate_discard_changes").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:annotate_discard_changes)$").a(LinkType.ANNOTATE_DISCARD_CHANGES).a(false).c(null).d(null).a());
        a.add(new a("annotate_playlist").a("spotify:annotate_playlist").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:annotate_playlist)$").a(LinkType.ANNOTATE_PLAYLIST).a(false).c(null).d(null).a());
        a.add(new a("app_protocol").a("spotify:app:appprotocol").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:app:appprotocol)$").a(LinkType.APP_PROTOCOL).a(false).c(null).d(null).a());
        a.add(new a("app_rater").a("spotify:app:app_rater").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:app:app_rater)$").a(LinkType.APP_RATER).a(false).c(null).d(null).a());
        a.add(new a("artist").a("spotify:artist:{artist_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:artist:[a-zA-Z0-9]{22})$").a(LinkType.ARTIST).a(true).c(str3).d("The overview page for a specific artist").e("spotify:artist:31TPClRtHm23RisEBtV3X7").e("spotify:artist:5WUlDfRSoLAfcVSX1WnrxN").e("https://open.spotify.com/artist/2SHhfs4BiDxGQ3oxqf0UHY").f("spotify:artist:").f("spotify:artist:bad").f("spotify:artist:5WUlDfRSoLAfcVSX1Wnr_N").a());
        a.add(new a("artist_about").a("spotify:artist:{artist_id as Base62}:about").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:artist:[a-zA-Z0-9]{22}:about)$").a(LinkType.ARTIST_ABOUT).a(false).c(null).d(null).a());
        a.add(new a("artist_albums").a("spotify:artist:{artist_id as Base62}:albums").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:artist:[a-zA-Z0-9]{22}:albums)$").a(LinkType.ARTIST_ALBUMS).a(false).c(null).d(null).a());
        a.add(new a("artist_appears_on").a("spotify:artist:{artist_id as Base62}:appears_on").a("spotify:artist:{artist_id as Base62}:appears-on").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:artist:[a-zA-Z0-9]{22}:appears_on|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:artist:[a-zA-Z0-9]{22}:appears-on)$").a(LinkType.ARTIST_APPEARS_ON).a(false).c(null).d(null).a());
        a.add(new a("artist_autoplay").a("spotify:artist:{artist_id as Base62}:play").a("spotify:artist:{artist_id as Base62}:play:{track_id as Base62}").a("spotify:artist:{artist_id as Base62}:play:track:{track_id as Base62}").a("spotify:artist:{artist_id as Base62}:play:episode:{episode_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:artist:[a-zA-Z0-9]{22}:play|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:artist:[a-zA-Z0-9]{22}:play:[a-zA-Z0-9]{22}|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:artist:[a-zA-Z0-9]{22}:play:track:[a-zA-Z0-9]{22}|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:artist:[a-zA-Z0-9]{22}:play:episode:[a-zA-Z0-9]{22})$").a(LinkType.ARTIST_AUTOPLAY).a(false).c(null).d(null).a());
        a.add(new a("artist_biography").a("spotify:artist:{artist_id as Base62}:biography").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:artist:[a-zA-Z0-9]{22}:biography)$").a(LinkType.ARTIST_BIOGRAPHY).a(false).c(null).d(null).a());
        a.add(new a("artist_compilations").a("spotify:artist:{artist_id as Base62}:compilations").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:artist:[a-zA-Z0-9]{22}:compilations)$").a(LinkType.ARTIST_COMPILATIONS).a(false).c(null).d(null).a());
        a.add(new a("artist_concert").a("spotify:artist:{artist_id as Base62}:concert").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:artist:[a-zA-Z0-9]{22}:concert)$").a(LinkType.ARTIST_CONCERT).a(false).c(null).d(null).a());
        a.add(new a("artist_concerts").a("spotify:artist:{artist_id as Base62}:concerts").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:artist:[a-zA-Z0-9]{22}:concerts)$").a(LinkType.ARTIST_CONCERTS).a(false).c(null).d(null).a());
        a.add(new a("artist_gallery").a("spotify:artist:{artist_id as Base62}:gallery").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:artist:[a-zA-Z0-9]{22}:gallery)$").a(LinkType.ARTIST_GALLERY).a(false).c(null).d(null).a());
        a.add(new a("artist_playlists").a("spotify:artist:{artist_id as Base62}:playlists").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:artist:[a-zA-Z0-9]{22}:playlists)$").a(LinkType.ARTIST_PLAYLISTS).a(false).c(null).d(null).a());
        a.add(new a("artist_radio").a("spotify:radio:artist:{artist_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:radio:artist:[a-zA-Z0-9]{22})$").a(LinkType.ARTIST_RADIO).a(false).c(null).d(null).a());
        a.add(new a("artist_related").a("spotify:artist:{artist_id as Base62}:related").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:artist:[a-zA-Z0-9]{22}:related)$").a(LinkType.ARTIST_RELATED).a(false).c(null).d(null).a());
        a.add(new a("artist_releases").a("spotify:artist:{artist_id as Base62}:releases").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:artist:[a-zA-Z0-9]{22}:releases)$").a(LinkType.ARTIST_RELEASES).a(false).c("NFTaco").d("A page all releases for a specific artist").e("spotify:artist:31TPClRtHm23RisEBtV3X7:releases").e("spotify:artist:5WUlDfRSoLAfcVSX1WnrxN:releases").e("https://open.spotify.com/artist/2SHhfs4BiDxGQ3oxqf0UHY/releases").f("spotify:artist::releases").f("spotify:artist:bad:releases").f("spotify:artist:5WUlDfRSoLAfcVSX1Wnr_N:releases").a());
        a.add(new a("artist_singles").a("spotify:artist:{artist_id as Base62}:singles").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:artist:[a-zA-Z0-9]{22}:singles)$").a(LinkType.ARTIST_SINGLES).a(false).c(null).d(null).a());
        a.add(new a("autologin").a("spotify:autologin").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:autologin)$").a(LinkType.AUTOLOGIN).a(false).c(null).d(null).a());
        a.add(new a("browse_concerts").a("spotify:concerts").a("spotify:app:concerts").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:concerts|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:app:concerts)$").a(LinkType.BROWSE_CONCERTS).a(true).c(null).d("The root of the browse concerts hierarchy within Browse").e("spotify:concerts").a());
        a.add(new a("browse_discover").a("spotify:discover").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:discover)$").a(LinkType.BROWSE_DISCOVER).a(true).c(null).d("The root of the browse discover hierarchy within Browse").e("spotify:discover").a());
        a.add(new a("browse_genres").a("spotify:genre:{genre_slug as text}").a("spotify:genre:{genre_slug as text}:{slug_b as text}").a("spotify:genre:{genre_slug as text}:{slug_b as text}:{slug_c as text}").a("spotify:genre:{genre_slug as text}:{slug_b as text}:{slug_c as text}:{slug_d as text}").a("spotify:genre:{genre_slug as text}:{slug_b as text}:{slug_c as text}:{slug_d as text}:{slug_e as text}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:genre:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:genre:[^:_#]+:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:genre:[^:_#]+:[^:_#]+:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:genre:[^:_#]+:[^:_#]+:[^:_#]+:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:genre:[^:_#]+:[^:_#]+:[^:_#]+:[^:_#]+:[^:_#]+)$").a(LinkType.BROWSE_GENRES).a(true).c(null).d("A specific genre in the context of Browse").e("spotify:genre:pop").e("spotify:genre:metal").f("spotify:genre:").a());
        String str4 = "Deprecated. This will redirect spotify:browse instead.";
        a.add(new a("browse_hubs").a("spotify:page:{name as text}").a("spotify:view:{name as text}").a("spotify:space:{name as text}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:page:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:view:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:space:[^:_#]+)$").a(LinkType.BROWSE_HUBS).a(false).c(null).d(str4).e("spotify:page:monkey").e("spotify:view:monkey").e("spotify:space:monkey").f("spotify:page:").f("spotify:view:").f("spotify:space:").a());
        a.add(new a("browse_imageset").a("spotify:imageset:{imageset_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:imageset:[a-zA-Z0-9]{22})$").a(LinkType.BROWSE_IMAGESET).a(false).c(null).d(str4).e("spotify:imageset:31TPClRtHm23RisEBtV3X7").f("spotify:imageset:").f("spotify:imageset:bad").f("spotify:imageset:31TPClRtHm23RisEBtV3_7").a());
        a.add(new a("browse_link").a("spotify:link:{link_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:link:[a-zA-Z0-9]{22})$").a(LinkType.BROWSE_LINK).a(false).c(null).d(str4).e("spotify:link:31TPClRtHm23RisEBtV3X7").f("spotify:link:").f("spotify:link:bad").f("spotify:link:31TPClRtHm23RisEBtV3_7").a());
        a.add(new a("browse_new_releases").a("spotify:app:browse:new_releases").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:app:browse:new_releases)$").a(LinkType.BROWSE_NEW_RELEASES).a(false).c(null).d(null).a());
        a.add(new a("browse_releases").a("spotify:new-releases").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:new-releases)$").a(LinkType.BROWSE_RELEASES).a(true).c(null).d("Deprecated. This will redirect spotify:browse instead. Use spotify:genre:new-releases").e("spotify:new-releases").a());
        a.add(new a("browse_root").a("spotify:browse").a("spotify:app:browse").a("spotify:app:browse:{slug as text}").a("spotify:app:browse:{slug as text}:{slug2 as text}").a("spotify:app:browse:{slug as text}:{slug2 as text}:{slug3 as text}").a("spotify:app:browse:{slug as text}:{slug2 as text}:{slug3 as text}:{slug4 as text}").a("spotify:app:browse:{slug as text}:{slug2 as text}:{slug3 as text}:{slug4 as text}:{slug5 as text}").a("spotify:hub:browse").a("spotify:hub:browse:{slug_a as text}").a("spotify:hub:browse:{slug_a as text}:{slug_b as text}").a("spotify:hub:browse:{slug_a as text}:{slug_b as text}:{slug_c as text}").a("spotify:hub:browse:{slug_a as text}:{slug_b as text}:{slug_c as text}:{slug_d as text}").a("spotify:hub:browse:{slug_a as text}:{slug_b as text}:{slug_c as text}:{slug_d as text}:{slug_e as text}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:browse|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:app:browse|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:app:browse:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:app:browse:[^:_#]+:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:app:browse:[^:_#]+:[^:_#]+:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:app:browse:[^:_#]+:[^:_#]+:[^:_#]+:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:app:browse:[^:_#]+:[^:_#]+:[^:_#]+:[^:_#]+:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:hub:browse|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:hub:browse:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:hub:browse:[^:_#]+:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:hub:browse:[^:_#]+:[^:_#]+:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:hub:browse:[^:_#]+:[^:_#]+:[^:_#]+:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:hub:browse:[^:_#]+:[^:_#]+:[^:_#]+:[^:_#]+:[^:_#]+)$").a(LinkType.BROWSE_ROOT).a(true).c(null).d("The root of the browse hierarchy within Browse (overview)").e("spotify:browse").a());
        a.add(new a("browse_toppodcast").a("spotify:internal:top-podcasts-page-v2").a("spotify:top-podcasts-page-v2").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:top-podcasts-page-v2|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:top-podcasts-page-v2)$").a(LinkType.BROWSE_TOPPODCAST).a(false).c(null).d("Deprecated. Used to fetch top podcast page").e("spotify:internal:top-podcasts-page-v2").e("spotify:top-podcasts-page-v2").f("spotify:bad:top-podcasts-page-v2").f("spotify:top-podcasts-page-v2:").f("spotify:internal:top-podcasts-page-v2:").a());
        a.add(new a("charts_root").a("spotify:charts").a("spotify:charts:root").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:charts|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:charts:root)$").a(LinkType.CHARTS_ROOT).a(true).c(null).d("The root of the browse charts hierarchy").e("spotify:charts").a());
        a.add(new a("charts_specific").a("spotify:chart:{set_id as Base62}").a("spotify:app:chart:{set_id as text}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:chart:[a-zA-Z0-9]{22}|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:app:chart:[^:_#]+)$").a(LinkType.CHARTS_SPECIFIC).a(true).c(null).d("A specific chart").e("spotify:chart:6o9o1UphRtyv10VPuDT80D").e("spotify:chart:4rcbQSKQHID0UdZzODxg2Y").f("spotify:chart:").f("spotify:chart:bad").f("spotify:chart:6o9o1UphRtyv10VPuDT8_D").a());
        a.add(new a("charts_subpage").a("spotify:charts:{group_slug as text}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:charts:[^:_#]+)$").a(LinkType.CHARTS_SUBPAGE).a(true).c(null).d("A specific subpage for a chart").e("spotify:charts:regional").e("spotify:charts:viral").f("spotify:charts:").a());
        a.add(new a("churn_locked_state").a("spotify:churn_locked_state").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:churn_locked_state)$").a(LinkType.CHURN_LOCKED_STATE).a(false).c(null).d(null).a());
        a.add(new a("cluster").a("spotify:user:{user_name as Username}:cluster:{gid as GidID}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:cluster:[^:?#]+)$").a(LinkType.CLUSTER).a(false).c(null).d(null).a());
        a.add(new a("cluster_stations_root").a("spotify:station:user:{user_name as Username}:clusters").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:station:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:clusters)$").a(LinkType.CLUSTER_STATIONS_ROOT).a(false).c(null).d(null).a());
        a.add(new a("collection_album").a("spotify:user:{username as Username}:collection:album:{album_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:collection:album:[a-zA-Z0-9]{22})$").a(LinkType.COLLECTION_ALBUM).a(false).c(null).d(null).a());
        String str5 = "favorite";
        a.add(new a("collection_album_overview").a("spotify:collection:albums").a("spotify:internal:collection:albums").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:collection:albums|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:collection:albums)$").a(LinkType.COLLECTION_ALBUM_OVERVIEW).a(true).c(str5).d("The album overview page in Your Library.").e("spotify:collection:albums").a());
        a.add(new a("collection_artist").a("spotify:user:{user_name as Username}:collection:artist:{artist_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:collection:artist:[a-zA-Z0-9]{22})$").a(LinkType.COLLECTION_ARTIST).a(false).c(null).d(null).a());
        a.add(new a("collection_artist_overview").a("spotify:collection:artists").a("spotify:internal:collection:artists").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:collection:artists|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:collection:artists)$").a(LinkType.COLLECTION_ARTIST_OVERVIEW).a(true).c(str5).d("The artist overview page in Your Library.").e("spotify:collection:artists").a());
        String str6 = "spoderman";
        a.add(new a("collection_listenlater_episodes").a("spotify:collection:listen-later-episodes").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:collection:listen-later-episodes)$").a(LinkType.COLLECTION_LISTENLATER_EPISODES).a(true).c(str6).d("A page containing a list of user saved episodes in Your Library.").e("spotify:collection:listen-later-episodes").a());
        a.add(new a("collection_nft_made_for_you").a("spotify:collection:nft-made-for-you").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:collection:nft-made-for-you)$").a(LinkType.COLLECTION_NFT_MADE_FOR_YOU).a(false).c(null).d(null).a());
        a.add(new a("collection_offline_episodes").a("spotify:collection:offline-episodes").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:collection:offline-episodes)$").a(LinkType.COLLECTION_OFFLINE_EPISODES).a(true).c(str6).d("The page in Your Library with a list of downloaded podcasts.").e("spotify:collection:offline-episodes").a());
        a.add(new a("collection_offline_library").a("spotify:offline-library").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:offline-library)$").a(LinkType.COLLECTION_OFFLINE_LIBRARY).a(true).c(str5).d("The page in Your Library with a list of downloaded albums and playlists.").e("spotify:offline-library").a());
        a.add(new a("collection_offline_podcasts_episodes").a("spotify:collection:podcasts:offline").a("spotify:internal:collection:podcasts:offline").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:collection:podcasts:offline|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:collection:podcasts:offline)$").a(LinkType.COLLECTION_OFFLINE_PODCASTS_EPISODES).a(true).c(str6).d("Page to see all your Downloaded Podcasts episodes.").e("spotify:collection:podcasts:offline").a());
        a.add(new a("collection_offlined_episodes").a("spotify:collection:offlined-episodes").a("spotify:internal:collection:offlined-episodes").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:collection:offlined-episodes|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:collection:offlined-episodes)$").a(LinkType.COLLECTION_OFFLINED_EPISODES).a(false).c(null).d(null).a());
        a.add(new a("collection_playlist_folder").a("spotify:user:{user_name as Username}:folder:{folder_id as Hex64}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:folder:[a-fA-F0-9]{16})$").a(LinkType.COLLECTION_PLAYLIST_FOLDER).a(false).c(null).d(null).e("spotify:user:sill_liblive_heavy:folder:0000000000000000").e("spotify:user:sill_liblive_heavy:folder:ffffffaBcDeFffff").f("spotify:user:sill_liblive_heavy:folder:00000000").f("spotify:user:sill_liblive_heavy:folder:thisisnotvalid").a());
        a.add(new a("collection_podcasts").a("spotify:collection:podcasts").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:collection:podcasts)$").a(LinkType.COLLECTION_PODCASTS).a(true).c(str6).d("A podcasts (only) overview page in Your Library.").e("spotify:collection:podcasts").a());
        a.add(new a("collection_podcasts_downloads").a("spotify:collection:podcasts:downloads").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:collection:podcasts:downloads)$").a(LinkType.COLLECTION_PODCASTS_DOWNLOADS).a(true).c(str6).d("Page to see all your Downloaded Podcasts episodes.").e("spotify:collection:podcasts:downloads").a());
        a.add(new a("collection_podcasts_episodes").a("spotify:collection:podcasts:episodes").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:collection:podcasts:episodes)$").a(LinkType.COLLECTION_PODCASTS_EPISODES).a(true).c(str6).d("A dedicated page containing both unfinished and unplayed episodes").e("spotify:collection:podcasts:episodes").a());
        a.add(new a("collection_podcasts_episodes_unfinished").a("spotify:collection:podcasts:unfinished").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:collection:podcasts:unfinished)$").a(LinkType.COLLECTION_PODCASTS_EPISODES_UNFINISHED).a(true).c(str6).d("Page to see the unfinished episodes (started, but not finished until the end) of Podcasts you follow in Your Library").e("spotify:collection:podcasts:unfinished").a());
        a.add(new a("collection_podcasts_following").a("spotify:collection:podcasts:following").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:collection:podcasts:following)$").a(LinkType.COLLECTION_PODCASTS_FOLLOWING).a(true).c(str6).d("A dedicated page containing all podcasts that the user is following").e("spotify:collection:podcasts:following").a());
        a.add(new a("collection_radio").a("spotify:collection:radio").a("spotify:internal:collection:radio").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:collection:radio|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:collection:radio)$").a(LinkType.COLLECTION_RADIO).a(false).c(null).d(null).a());
        a.add(new a("collection_root").a("spotify:collection").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:collection)$").a(LinkType.COLLECTION_ROOT).a(true).c(str5).d("The root of the Your Library page hierarchy on mobile.").e("spotify:collection").a());
        a.add(new a("collection_rootlist").a("spotify:playlists").a("spotify:collection:playlists").a("spotify:internal:collection:playlists").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:playlists|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:collection:playlists|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:collection:playlists)$").a(LinkType.COLLECTION_ROOTLIST).a(true).c(str5).d("The root of the playlist hierarchy within Your Library on mobile.").e("spotify:playlists").a());
        a.add(new a("collection_shows").a("spotify:collection:shows").a("spotify:internal:collection:shows").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:collection:shows|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:collection:shows)$").a(LinkType.COLLECTION_SHOWS).a(true).c(str5).d("A podcasts and video shows overview page in Your Library.").e("spotify:collection:shows").a());
        a.add(new a("collection_tracks").a("spotify:collection:tracks").a("spotify:internal:collection:tracks").a("spotify:user:{user_name as Username}:collection").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:collection:tracks|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:collection:tracks|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:collection)$").a(LinkType.COLLECTION_TRACKS).a(true).c(str5).d("The list of tracks in Your Library.").e("spotify:collection:tracks").a());
        a.add(new a("collection_unplayed_episodes").a("spotify:collection:unplayed-episodes").a("spotify:internal:collection:unplayed-episodes").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:collection:unplayed-episodes|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:collection:unplayed-episodes)$").a(LinkType.COLLECTION_UNPLAYED_EPISODES).a(true).c(str6).d("The page in Your Library with a list of unplayed podcasts and video shows.").e("spotify:collection:unplayed-episodes").a());
        a.add(new a("collection_unplayed_podcasts_episodes").a("spotify:collection:podcasts:unplayed").a("spotify:internal:collection:podcasts:unplayed").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:collection:podcasts:unplayed|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:collection:podcasts:unplayed)$").a(LinkType.COLLECTION_UNPLAYED_PODCASTS_EPISODES).a(true).c(str6).d("Page to see the unplayed episodes of Podcasts you follow in Your Library").e("spotify:collection:podcasts:unplayed").a());
        a.add(new a("collection_unplayed_videos").a("spotify:collection:videos:unplayed").a("spotify:internal:collection:videos:unplayed").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:collection:videos:unplayed|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:collection:videos:unplayed)$").a(LinkType.COLLECTION_UNPLAYED_VIDEOS).a(true).c(str6).d("Page to see the unplayed followed videos in Your Library").e("spotify:collection:videos:unplayed").a());
        a.add(new a("collection_videos").a("spotify:collection:videos").a("spotify:internal:collection:videos").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:collection:videos|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:collection:videos)$").a(LinkType.COLLECTION_VIDEOS).a(true).c(str5).d("A video (only) overview page in Your Library.").e("spotify:collection:videos").a());
        a.add(new a("concert_entity").a("spotify:concert:{id as text}").a("spotify:concert:songkick:events:{id as text}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:concert:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:concert:songkick:events:[^:_#]+)$").a(LinkType.CONCERT_ENTITY).a(false).c(null).d(null).e("spotify:concert:monkey").e("spotify:concert:songkick:events:monkey").f("spotify:concerts:monkey").f("spotify:concerts:songkick:events:monkey").a());
        a.add(new a("concerts_location_search").a("spotify:concerts:location-search").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:concerts:location-search)$").a(LinkType.CONCERTS_LOCATION_SEARCH).a(false).c(null).d(null).a());
        a.add(new a("concerts_webview").a("spotify:internal:concerts:webview").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:concerts:webview)$").a(LinkType.CONCERTS_WEBVIEW).a(false).c(null).d(null).a());
        a.add(new a("config").a("spotify:internal:preferences").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:preferences)$").a(LinkType.CONFIG).a(false).c(null).d(null).a());
        a.add(new a("config_content_languages").a("spotify:internal:preferences:content_languages").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:preferences:content_languages)$").a(LinkType.CONFIG_CONTENT_LANGUAGES).a(false).c(null).d(null).a());
        a.add(new a("config_push_notification").a("spotify:internal:preferences:push_notification").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:preferences:push_notification)$").a(LinkType.CONFIG_PUSH_NOTIFICATION).a(false).c(null).d(null).a());
        a.add(new a("config_storage").a("spotify:internal:preferences:storage").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:preferences:storage)$").a(LinkType.CONFIG_STORAGE).a(false).c(null).d(null).a());
        a.add(new a("confirm_deletion").a("spotify:confirm_deletion").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:confirm_deletion)$").a(LinkType.CONFIRM_DELETION).a(false).c(null).d(null).a());
        a.add(new a("connect").a("spotify:internal:gaia").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:gaia)$").a(LinkType.CONNECT).a(false).c(null).d(null).a());
        a.add(new a("connect_device_picker").a("spotify:internal:gaia-picker").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:gaia-picker)$").a(LinkType.CONNECT_DEVICE_PICKER).a(false).c(null).d(null).a());
        a.add(new a("connect_device_picker_menu").a("spotify:internal:gaia-picker-device-menu").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:gaia-picker-device-menu)$").a(LinkType.CONNECT_DEVICE_PICKER_MENU).a(false).c(null).d(null).a());
        a.add(new a("connect_onboarding_control").a("spotify:internal:gaia-onboarding-disabled").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:gaia-onboarding-disabled)$").a(LinkType.CONNECT_ONBOARDING_CONTROL).a(false).c(null).d(null).a());
        a.add(new a("connect_onboarding_popup").a("spotify:internal:gaia-onboarding-popup").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:gaia-onboarding-popup)$").a(LinkType.CONNECT_ONBOARDING_POPUP).a(false).c(null).d(null).a());
        a.add(new a("connect_onboarding_popup_educational").a("spotify:internal:gaia-onboarding-popup-educational").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:gaia-onboarding-popup-educational)$").a(LinkType.CONNECT_ONBOARDING_POPUP_EDUCATIONAL).a(false).c(null).d(null).a());
        a.add(new a("connect_transfer_popup").a("spotify:internal:gaia-popup").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:gaia-popup)$").a(LinkType.CONNECT_TRANSFER_POPUP).a(false).c(null).d(null).a());
        a.add(new a("create_rename_playlist").a("spotify:create_rename_playlist").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:create_rename_playlist)$").a(LinkType.CREATE_RENAME_PLAYLIST).a(false).c(null).d(null).a());
        a.add(new a("daily_mix_hub").a("spotify:daily-mix-hub").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:daily-mix-hub)$").a(LinkType.DAILY_MIX_HUB).a(false).c("montage").d("Uri for the Daily Mix Hub").a());
        a.add(new a("dailymix").a("spotify:dailymix:{gid as GidID}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:dailymix:[^:?#]+)$").a(LinkType.DAILYMIX).a(false).c("montage").d("Uri for dailymix").a());
        a.add(new a("data_saver_learn_more").a("spotify:internal:data-saver-learn-more").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:data-saver-learn-more)$").a(LinkType.DATA_SAVER_LEARN_MORE).a(false).c("Market Opportunities").d("Uri for Learn More overlay for Data Saver").a());
        a.add(new a("data_saver_opt_in").a("spotify:internal:data-saver-opt-in").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:data-saver-opt-in)$").a(LinkType.DATA_SAVER_OPT_IN).a(false).c("Market Opportunities").d("Uri for Status overlay for Data Saver").a());
        a.add(new a("debug").a("spotify:internal:debug").a("spotify:internal:debug:{debug_text as text}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:debug|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:debug:[^:_#]+)$").a(LinkType.DEBUG).a(false).c(null).d(null).a());
        a.add(new a("deleting_cache_dialog").a("spotify:deleting_cache_dialog").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:deleting_cache_dialog)$").a(LinkType.DELETING_CACHE_DIALOG).a(false).c(null).d(null).a());
        a.add(new a("devices").a("spotify:internal:devices").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:devices)$").a(LinkType.DEVICES).a(false).c(null).d(null).a());
        a.add(new a("disable_offline_mode").a("spotify:login:disable_offline_mode").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:login:disable_offline_mode)$").a(LinkType.DISABLE_OFFLINE_MODE).a(false).c(null).d(null).a());
        a.add(new a("disk_almost_full").a("spotify:disk_almost_full").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:disk_almost_full)$").a(LinkType.DISK_ALMOST_FULL).a(false).c(null).d(null).a());
        a.add(new a("driving_mode").a("spotify:driving").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:driving)$").a(LinkType.DRIVING_MODE).a(false).c(null).d(null).a());
        a.add(new a("dummy").a("spotify:internal:dummy").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:dummy)$").a(LinkType.DUMMY).a(false).c(null).d(null).a());
        a.add(new a("dynamic_upsell").a("spotify:dynamic_upsell").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:dynamic_upsell)$").a(LinkType.DYNAMIC_UPSELL).a(false).c(null).d(null).a());
        a.add(new a("episode_autoplay").a("spotify:episode:{episode_id as Base62}:play").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:episode:[a-zA-Z0-9]{22}:play)$").a(LinkType.EPISODE_AUTOPLAY).a(false).c(null).d(null).a());
        a.add(new a("events_concert_group").a("spotify:app:concerts:concert-group").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:app:concerts:concert-group)$").a(LinkType.EVENTS_CONCERT_GROUP).a(false).c(null).d(null).a());
        a.add(new a("eventsender").a("spotify:eventsender").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:eventsender)$").a(LinkType.EVENTSENDER).a(false).c("instruments").d("Uri for Instruments hidden view to test the integration with new app").a());
        a.add(new a("feed").a("spotify:feed").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:feed)$").a(LinkType.FEED).a(false).c("usher").d("Uri for the Feed experiment").a());
        a.add(new a("find").a("spotify:find").a("spotify:find:{category as text}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:find|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:find:[^:_#]+)$").a(LinkType.FIND).a(false).c("waldo").d("Uri for a page with merged Search and Browse content").a());
        a.add(new a("findfriends").a("spotify:findfriends").a("spotify:app:findfriends").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:findfriends|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:app:findfriends)$").a(LinkType.FINDFRIENDS).a(false).c(null).d(null).a());
        a.add(new a("follow_artists").a("spotify:follow:artists").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:follow:artists)$").a(LinkType.FOLLOW_ARTISTS).a(false).c(null).d(null).a());
        a.add(new a("follow_facebook").a("spotify:follow:facebook").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:follow:facebook)$").a(LinkType.FOLLOW_FACEBOOK).a(false).c(null).d(null).a());
        a.add(new a("followfeed").a("spotify:followfeed").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:followfeed)$").a(LinkType.FOLLOWFEED).a(false).c("oz").d("Uri for the follow feed feature.").a());
        a.add(new a("format_list_chart").a("spotify:internal:format_list_chart:toplist").a("spotify:internal:format_list_chart:spotify:playlist:{playlist_id as Base62}").a("spotify:internal:format_list_chart:spotify:user:{user_name as Username}").a("spotify:internal:format_list_chart:spotify:user:{user_name as Username}:playlist:{playlist_id as Base62}").a("spotify:internal:format_list_chart:spotify:user:{user_name as Username}:top:tracks").a("spotify:internal:format_list_chart:spotify:user:{user_name as Username}:toplist").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:format_list_chart:toplist|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:format_list_chart:[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:playlist:[a-zA-Z0-9]{22}|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:format_list_chart:[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:format_list_chart:[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:playlist:[a-zA-Z0-9]{22}|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:format_list_chart:[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:top:tracks|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:format_list_chart:[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:toplist)$").a(LinkType.FORMAT_LIST_CHART).a(false).c(null).d(null).a());
        a.add(new a("format_list_chart_autoplay").a("spotify:internal:format_list_chart:spotify:playlist:{playlist_id as Base62}:play").a("spotify:internal:format_list_chart:spotify:user:{user_name as Username}:playlist:{playlist_id as Base62}:play").a("spotify:internal:format_list_chart:spotify:user:{user_name as Username}:playlist:{playlist_id as Base62}:play:track:{track_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:format_list_chart:[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:playlist:[a-zA-Z0-9]{22}:play|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:format_list_chart:[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:playlist:[a-zA-Z0-9]{22}:play|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:format_list_chart:[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:playlist:[a-zA-Z0-9]{22}:play:track:[a-zA-Z0-9]{22})$").a(LinkType.FORMAT_LIST_CHART_AUTOPLAY).a(false).c(null).d(null).a());
        a.add(new a("format_list_data_saver").a("spotify:internal:format_list_data_saver:spotify:playlist:{playlist_id as Base62}").a("spotify:internal:format_list_data_saver:spotify:user:{user_name as Username}:playlist:{playlist_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:format_list_data_saver:[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:playlist:[a-zA-Z0-9]{22}|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:format_list_data_saver:[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:playlist:[a-zA-Z0-9]{22})$").a(LinkType.FORMAT_LIST_DATA_SAVER).a(false).c(null).d(null).a());
        a.add(new a("format_list_home_mix").a("spotify:internal:format_list_home_mix:spotify:playlist:{playlist_id as Base62}").a("spotify:internal:format_list_home_mix:spotify:user:{user_name as Username}").a("spotify:internal:format_list_home_mix:spotify:user:{user_name as Username}:playlist:{playlist_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:format_list_home_mix:[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:playlist:[a-zA-Z0-9]{22}|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:format_list_home_mix:[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:format_list_home_mix:[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:playlist:[a-zA-Z0-9]{22})$").a(LinkType.FORMAT_LIST_HOME_MIX).a(false).c(null).d(null).a());
        a.add(new a("format_list_personalized_sets").a("spotify:internal:format_list_personalized_sets:toplist").a("spotify:internal:format_list_personalized_sets:spotify:playlist:{playlist_id as Base62}").a("spotify:internal:format_list_personalized_sets:spotify:user:{user_name as Username}").a("spotify:internal:format_list_personalized_sets:spotify:user:{user_name as Username}:playlist:{playlist_id as Base62}").a("spotify:internal:format_list_personalized_sets:spotify:user:{user_name as Username}:top:tracks").a("spotify:internal:format_list_personalized_sets:spotify:user:{user_name as Username}:toplist").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:format_list_personalized_sets:toplist|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:format_list_personalized_sets:[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:playlist:[a-zA-Z0-9]{22}|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:format_list_personalized_sets:[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:format_list_personalized_sets:[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:playlist:[a-zA-Z0-9]{22}|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:format_list_personalized_sets:[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:top:tracks|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:format_list_personalized_sets:[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:toplist)$").a(LinkType.FORMAT_LIST_PERSONALIZED_SETS).a(false).c(null).d(null).a());
        a.add(new a("format_list_personalized_sets_autoplay").a("spotify:internal:format_list_personalized_sets:spotify:playlist:{playlist_id as Base62}:play").a("spotify:internal:format_list_personalized_sets:spotify:user:{user_name as Username}:playlist:{playlist_id as Base62}:play").a("spotify:internal:format_list_personalized_sets:spotify:user:{user_name as Username}:playlist:{playlist_id as Base62}:play:track:{track_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:format_list_personalized_sets:[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:playlist:[a-zA-Z0-9]{22}:play|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:format_list_personalized_sets:[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:playlist:[a-zA-Z0-9]{22}:play|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:format_list_personalized_sets:[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:playlist:[a-zA-Z0-9]{22}:play:track:[a-zA-Z0-9]{22})$").a(LinkType.FORMAT_LIST_PERSONALIZED_SETS_AUTOPLAY).a(false).c(null).d(null).a());
        a.add(new a("fullscreen_video_player").a("spotify:fullscreen_videoplayer").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:fullscreen_videoplayer)$").a(LinkType.FULLSCREEN_VIDEO_PLAYER).a(false).c(null).d(null).a());
        a.add(new a("genre_radio").a("spotify:radio:genre:{radio_slug as text}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:radio:genre:[^:_#]+)$").a(LinkType.GENRE_RADIO).a(false).c(null).d(null).a());
        a.add(new a("golden_path").a("spotify:goldenpath").a("spotify:goldenpath:reference-top-list").a("spotify:goldenpath:toptracks").a("spotify:goldenpath:goldenpathtutorialstep01").a("spotify:goldenpath:goldenpathtutorialstep02").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:goldenpath|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:goldenpath:reference-top-list|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:goldenpath:toptracks|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:goldenpath:goldenpathtutorialstep01|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:goldenpath:goldenpathtutorialstep02)$").a(LinkType.GOLDEN_PATH).a(false).c("marvin").d("Uris for Golden Path features").a());
        a.add(new a("home_drilldown").a("spotify:home:{page_id as text}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:home:[^:_#]+)$").a(LinkType.HOME_DRILLDOWN).a(false).c("NFTaco").d("A drill down page for home").e("spotify:home:made-for-you").e("https://open.spotify.com/home/made-for-you").f("spotify:home:").a());
        a.add(new a("home_root").a("spotify:home").a("spotify:startpage").a("spotify:internal:startpage").a("spotify:internal:home").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:home|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:startpage|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:startpage|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:home)$").a(LinkType.HOME_ROOT).a(true).c(null).d("The root of the home hierarchy (Home on mobile)").e("spotify:home").a());
        a.add(new a("invite_confirmation").a("spotify:invite:confirmation").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:invite:confirmation)$").a(LinkType.INVITE_CONFIRMATION).a(false).c(null).d(null).a());
        a.add(new a("invite_have").a("spotify:invite:have-invite").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:invite:have-invite)$").a(LinkType.INVITE_HAVE).a(false).c(null).d(null).a());
        a.add(new a("invite_request").a("spotify:invite:request-invite").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:invite:request-invite)$").a(LinkType.INVITE_REQUEST).a(false).c(null).d(null).a());
        a.add(new a("invite_start").a("spotify:invite:start").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:invite:start)$").a(LinkType.INVITE_START).a(false).c(null).d(null).a());
        a.add(new a("language_aware_onboarding").a("spotify:internal:language-aware-onboarding").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:language-aware-onboarding)$").a(LinkType.LANGUAGE_AWARE_ONBOARDING).a(false).c("cricket").d("Uri for Language aware onboarding (i.e., language onboarding followed by taste onboarding)").e("spotify:internal:language-aware-onboarding").a());
        a.add(new a("legal_privacypolicy").a("spotify:privacy-policy").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:privacy-policy)$").a(LinkType.LEGAL_PRIVACYPOLICY).a(false).c(null).d("The root of the Privacy Policy hierarchy within About").e("spotify:privacy-policy").a());
        a.add(new a("legal_terms").a("spotify:terms").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:terms)$").a(LinkType.LEGAL_TERMS).a(false).c(null).d("The root of the Terms and Conditions hierarchy within About").e("spotify:terms").a());
        a.add(new a("licenses").a("spotify:licenses").a("spotify:internal:licenses").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:licenses|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:licenses)$").a(LinkType.LICENSES).a(false).c(null).d(null).a());
        a.add(new a("likes_hidden_content").a("spotify:internal:hidden-content").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:hidden-content)$").a(LinkType.LIKES_HIDDEN_CONTENT).a(false).c("lajka").d("Uri for Hidden content in Your Libary").a());
        a.add(new a("listening_history").a("spotify:listening-history").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:listening-history)$").a(LinkType.LISTENING_HISTORY).a(false).c(null).d(null).a());
        a.add(new a("live_event").a("spotify:live:{event_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:live:[a-zA-Z0-9]{22})$").a(LinkType.LIVE_EVENT).a(true).c("Betamax").d("Opens a specific live event").e("spotify:live:03OiVQrcvTCqxvRgPpX4ti").f("spotify:live:").f("spotify:live:bad").a());
        a.add(new a("local_files_import").a("spotify:internal:local_files_import").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:local_files_import)$").a(LinkType.LOCAL_FILES_IMPORT).a(false).c(null).d(null).a());
        a.add(new a("local_files_import_albums").a("spotify:internal:local_files_import:albums").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:local_files_import:albums)$").a(LinkType.LOCAL_FILES_IMPORT_ALBUMS).a(false).c(null).d(null).a());
        a.add(new a("local_files_import_artists").a("spotify:internal:local_files_import:artists").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:local_files_import:artists)$").a(LinkType.LOCAL_FILES_IMPORT_ARTISTS).a(false).c(null).d(null).a());
        a.add(new a("local_files_import_folders").a("spotify:internal:local_files_import:folders").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:local_files_import:folders)$").a(LinkType.LOCAL_FILES_IMPORT_FOLDERS).a(false).c(null).d(null).a());
        a.add(new a("local_files_import_songs").a("spotify:internal:local_files_import:songs").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:local_files_import:songs)$").a(LinkType.LOCAL_FILES_IMPORT_SONGS).a(false).c(null).d(null).a());
        a.add(new a("login_facebook").a("spotify:login:facebook").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:login:facebook)$").a(LinkType.LOGIN_FACEBOOK).a(false).c(null).d(null).a());
        a.add(new a("login_google").a("spotify:login:google").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:login:google)$").a(LinkType.LOGIN_GOOGLE).a(false).c(null).d(null).a());
        a.add(new a("login_prelaunch_interest").a("spotify:login:prelaunch-interest").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:login:prelaunch-interest)$").a(LinkType.LOGIN_PRELAUNCH_INTEREST).a(false).c(null).d(null).a());
        a.add(new a("login_start").a("spotify:nux:login-signup").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:nux:login-signup)$").a(LinkType.LOGIN_START).a(false).c(null).d(null).a());
        a.add(new a("login_welcome").a("spotify:login:welcome").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:login:welcome)$").a(LinkType.LOGIN_WELCOME).a(false).c(null).d(null).a());
        a.add(new a("made_for_you_hub").a("spotify:made-for-you").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:made-for-you)$").a(LinkType.MADE_FOR_YOU_HUB).a(false).c("exoset").d("Uri to access Made for You hub").a());
        a.add(new a("main").a("spotify:main").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:main)$").a(LinkType.MAIN).a(false).c(null).d(null).a());
        a.add(new a("media_service").a("spotify:media_service").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:media_service)$").a(LinkType.MEDIA_SERVICE).a(false).c(null).d(null).a());
        a.add(new a("mixify").a("spotify:mixify:{set_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:mixify:[a-zA-Z0-9]{22})$").a(LinkType.MIXIFY).a(false).c(null).d(null).a());
        a.add(new a("mo_precached_playlist").a("spotify:internal:mo:precached-playlist").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:mo:precached-playlist)$").a(LinkType.MO_PRECACHED_PLAYLIST).a(false).c(null).d(null).a());
        a.add(new a("mo_precached_playlists").a("spotify:internal:mo:precached-playlists").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:mo:precached-playlists)$").a(LinkType.MO_PRECACHED_PLAYLISTS).a(false).c(null).d(null).a());
        a.add(new a("navigation").a("spotify:navigation").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:navigation)$").a(LinkType.NAVIGATION).a(false).c(null).d(null).a());
        a.add(new a("navigation_apps_settings").a("spotify:navigation-apps:settings").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:navigation-apps:settings)$").a(LinkType.NAVIGATION_APPS_SETTINGS).a(true).c("opx").d("Access the settings screen for navigation apps integrated in Spotify").e("spotify:navigation-apps:settings").a());
        a.add(new a("new_releases_feed").a("spotify:new-releases-feed").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:new-releases-feed)$").a(LinkType.NEW_RELEASES_FEED).a(false).c("mixtapes").d("Uri for New Releases Feed experiment").a());
        a.add(new a("notification").a("spotify:internal:notification").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:notification)$").a(LinkType.NOTIFICATION).a(false).c(null).d(null).a());
        a.add(new a("notification_inbox").a("spotify:app:notification_inbox").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:app:notification_inbox)$").a(LinkType.NOTIFICATION_INBOX).a(false).c(null).d(null).a());
        a.add(new a("offline_sync_error").a("spotify:offline_sync_error").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:offline_sync_error)$").a(LinkType.OFFLINE_SYNC_ERROR).a(false).c(null).d(null).a());
        a.add(new a("onboarding_tooltip").a("spotify:app:tinkerbell").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:app:tinkerbell)$").a(LinkType.ONBOARDING_TOOLTIP).a(false).c(null).d(null).a());
        a.add(new a("play_devicepicker").a("spotify:connect-device-picker").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:connect-device-picker)$").a(LinkType.PLAY_DEVICEPICKER).a(true).c(null).d("The root of the Device Picker hierarchy").e("spotify:connect-device-picker").a());
        a.add(new a("play_nowplaying").a("spotify:now-playing").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:now-playing)$").a(LinkType.PLAY_NOWPLAYING).a(true).c(null).d("The root of the Now Playing hierarchy").e("spotify:now-playing").a());
        a.add(new a("player_bar").a("spotify:now-playing-bar").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:now-playing-bar)$").a(LinkType.PLAYER_BAR).a(false).c(null).d(null).a());
        a.add(new a("player_view").a("spotify:now-playing-view").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:now-playing-view)$").a(LinkType.PLAYER_VIEW).a(false).c(null).d(null).a());
        a.add(new a("playlist_autoplay").a("spotify:user:{user_name as Username}:playlist:{playlist_id as Base62}:play").a("spotify:user:{user_name as Username}:playlist:{playlist_id as Base62}:play:{track_id as Base62}").a("spotify:user:{user_name as Username}:playlist:{playlist_id as Base62}:play:track:{track_id as Base62}").a("spotify:user:{user_name as Username}:playlist:{playlist_id as Base62}:play:episode:{episode_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:playlist:[a-zA-Z0-9]{22}:play|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:playlist:[a-zA-Z0-9]{22}:play:[a-zA-Z0-9]{22}|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:playlist:[a-zA-Z0-9]{22}:play:track:[a-zA-Z0-9]{22}|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:playlist:[a-zA-Z0-9]{22}:play:episode:[a-zA-Z0-9]{22})$").a(LinkType.PLAYLIST_AUTOPLAY).a(false).c(null).d(null).a());
        a.add(new a("playlist_entity_example").a("spotify:internal:playlist-entity-example:spotify:user:{user_name as Username}:playlist:{playlist_id as Base62}").a("spotify:internal:playlist-entity-example:spotify:playlist:{playlist_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:playlist-entity-example:[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:playlist:[a-zA-Z0-9]{22}|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:playlist-entity-example:[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:playlist:[a-zA-Z0-9]{22})$").a(LinkType.PLAYLIST_ENTITY_EXAMPLE).a(false).c("playlist-platform").d("Uri to reach example implementation of a playlist entity (only in debug)").a());
        a.add(new a("playlist_radio").a("spotify:radio:playlist:{playlist_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:radio:playlist:[a-zA-Z0-9]{22})$").a(LinkType.PLAYLIST_RADIO).a(false).c(null).d(null).a());
        a.add(new a("playlist_v2").a("spotify:playlist:{playlist_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:playlist:[a-zA-Z0-9]{22})$").a(LinkType.PLAYLIST_V2).a(true).c("Playlist Platform Squad").d("Identifies and links to a playlist.").e("spotify:playlist:5yolys8XG4q7YfjYGl5Lff").e("spotify:playlist:6krJqHXaP1k9XraZ3G3O5J").e("https://open.spotify.com/playlist/6krJqHXaP1k9XraZ3G3O5J").f("spotify:playlist:5yolys8XG4q7YfjYGl5L").f("spotify:playlist:5yolys8XG4q7YfjYGl5L_f").a());
        a.add(new a("playlist_v2_autoplay").a("spotify:playlist:{playlist_id as Base62}:play").a("spotify:playlist:{playlist_id as Base62}:play:{track_id as Base62}").a("spotify:playlist:{playlist_id as Base62}:play:track:{track_id as Base62}").a("spotify:playlist:{playlist_id as Base62}:play:episode:{episode_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:playlist:[a-zA-Z0-9]{22}:play|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:playlist:[a-zA-Z0-9]{22}:play:[a-zA-Z0-9]{22}|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:playlist:[a-zA-Z0-9]{22}:play:track:[a-zA-Z0-9]{22}|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:playlist:[a-zA-Z0-9]{22}:play:episode:[a-zA-Z0-9]{22})$").a(LinkType.PLAYLIST_V2_AUTOPLAY).a(true).c("Playlist Platform Squad").d("Identifies and links to a playlist and starts playing it or a specifc track").e("spotify:playlist:5yolys8XG4q7YfjYGl5Lff:play").e("spotify:playlist:6krJqHXaP1k9XraZ3G3O5J:play:3JeT6Xcv6MlEHHylk8SKQ1").f("spotify:playlist:5yolys8XG4q7YfjYGl5L:play").f("spotify:playlist:6krJqHXaP1k9XraZ3G3O5J:blay").a());
        a.add(new a("podcast_episode").a("spotify:internal:podcast:episode:{episode_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:podcast:episode:[a-zA-Z0-9]{22})$").a(LinkType.PODCAST_EPISODE).a(false).c(null).d("A specific episode of a show in the context of a podcast show").e("spotify:internal:podcast:episode:1N14ZPZmu4sw62Ry5WnRyS").f("spotify:episode:1N14ZPZmu4sw62Ry5WnRyS").f("spotify:podcast:episode:").f("spotify:internal:podcast").f("spotify:internal:podcast:bad").f("spotify:internal:podcast:5yolys8XG4q7YfjYGl5L_f").a());
        String str7 = "ignite";
        a.add(new a("podcast_onboarding").a("spotify:internal:podcast-onboarding").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:podcast-onboarding)$").a(LinkType.PODCAST_ONBOARDING).a(false).c(str7).d("Uri for Podcast Onboarding").e("spotify:internal:podcast-onboarding").a());
        a.add(new a("premium_activation_card").a("spotify:premium:activation").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:premium:activation)$").a(LinkType.PREMIUM_ACTIVATION_CARD).a(false).c(null).d(null).a());
        a.add(new a("premium_hub").a("spotify:premiumhub").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:premiumhub)$").a(LinkType.PREMIUM_HUB).a(false).c(null).d(null).a());
        a.add(new a("premium_in_app_destination").a("spotify:premium-destination").a("spotify:upsell:premium_in_app_destination").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:premium-destination|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:upsell:premium_in_app_destination)$").a(LinkType.PREMIUM_IN_APP_DESTINATION).a(false).c(null).d(null).a());
        a.add(new a("premium_signup").a("spotify:internal:premium_signup").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:premium_signup)$").a(LinkType.PREMIUM_SIGNUP).a(false).c(null).d(null).a());
        a.add(new a("profile").a("spotify:user:{user_name as Username}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+)$").a(LinkType.PROFILE).a(true).c(str3).d("Identifies a user and links to the user's root profile page.").e("spotify:user:daniel").e("spotify:user:ab%3Fcd").e("https://open.spotify.com/user/daniel").f("spotify:user:").f("spotify:user:ab?cd").f("spotify:user:X").f("spotify:user::collection").a());
        a.add(new a("profile_artists").a("spotify:user:{user_name as Username}:artists").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:artists)$").a(LinkType.PROFILE_ARTISTS).a(false).c(null).d(null).a());
        a.add(new a("profile_followers").a("spotify:user:{user_name as Username}:followers").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:followers)$").a(LinkType.PROFILE_FOLLOWERS).a(true).c(str3).d("Links to the Followers page or tab of a user's profile.").e("spotify:user:daniel:followers").e("spotify:user:ab%3Fcd:followers").e("https://open.spotify.com/user/daniel/followers").f("spotify:user:ab?cd:followers").f("spotify:user:X:followers").f("spotify:user::collection:followers").a());
        a.add(new a("profile_following").a("spotify:user:{user_name as Username}:following").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:following)$").a(LinkType.PROFILE_FOLLOWING).a(true).c(str3).d("Links to the Following page or tab of a user's profile.").e("spotify:user:daniel:following").e("spotify:user:ab%3Fcd:following").e("https://open.spotify.com/user/daniel/following").f("spotify:user:ab?cd:following").f("spotify:user:X:following").f("spotify:user::collection:following").a());
        a.add(new a("profile_invitation_codes").a("spotify:user:{user_name as Username}:invitationcodes").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:invitationcodes)$").a(LinkType.PROFILE_INVITATION_CODES).a(false).c(null).d(null).a());
        a.add(new a("profile_playlist").a("spotify:user:{user_name as Username}:playlist:{playlist_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:playlist:[a-zA-Z0-9]{22})$").a(LinkType.PROFILE_PLAYLIST).a(true).c("fesk").d("Identifies and links to a playlist.").e("spotify:user:spotify:playlist:37i9dQZF1DX4JAvHpjipBk").e("spotify:user:metaltalks:playlist:6krJqHXaP1k9XraZ3G3O5J").e("https://open.spotify.com/user/metaltalks/playlist/6krJqHXaP1k9XraZ3G3O5J").f("spotify:user:spotify:playlist:5yolys8XG4q7YfjYGl5L").f("spotify:user:spotify:playlist:5yolys8XG4q7YfjYGl5L_f").a());
        a.add(new a("profile_playlist_overview").a("spotify:user:{user_name as Username}:playlists").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:playlists)$").a(LinkType.PROFILE_PLAYLIST_OVERVIEW).a(true).c(str3).d("Links to the Playlists page or tab of a user's profile.").e("spotify:user:daniel:playlists").e("spotify:user:ab%3Fcd:playlists").e("https://open.spotify.com/user/ab%3Fcd/playlists").f("spotify:user:ab?cd:playlists").f("spotify:user:X:playlists").f("spotify:user::collection:playlists").a());
        a.add(new a("push_notification").a("spotify:internal:push_notification").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:push_notification)$").a(LinkType.PUSH_NOTIFICATION).a(false).c(null).d(null).a());
        a.add(new a("push_notification_webview").a("spotify:internal:notification_webview:{url as URL}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:notification_webview:http(s?)%3[aA]%2[fF]%2[fF]([^\\s]*)?)$").a(LinkType.PUSH_NOTIFICATION_WEBVIEW).a(false).c(null).d(null).a());
        a.add(new a("queue").a("spotify:queue").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:queue)$").a(LinkType.QUEUE).a(false).c(null).d(null).a());
        a.add(new a("radio_album").a("spotify:station:album:{album_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:station:album:[a-zA-Z0-9]{22})$").a(LinkType.RADIO_ALBUM).a(true).c(null).d("A radio station for a specific album").e("spotify:station:album:1CiO0EwK73UWXiAflI5ZSs").f("spotify:station:album:").a());
        a.add(new a("radio_artist").a("spotify:station:artist:{artist_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:station:artist:[a-zA-Z0-9]{22})$").a(LinkType.RADIO_ARTIST).a(true).c(null).d("A radio station for a specific artist").e("spotify:station:artist:5WUlDfRSoLAfcVSX1WnrxN").f("spotify:station:artist:").a());
        a.add(new a("radio_genre").a("spotify:station:genre:{radio_slug as text}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:station:genre:[^:_#]+)$").a(LinkType.RADIO_GENRE).a(true).c(null).d("A specific radio genre").e("spotify:station:genre:soul").f("spotify:station:genre:").a());
        a.add(new a("radio_playlist").a("spotify:station:user:{user_name as Username}:playlist:{playlist_id as Base62}").a("spotify:station:user:{user_name as Username}:top:tracks").a("spotify:station:user:{user_name as Username}:toplist").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:station:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:playlist:[a-zA-Z0-9]{22}|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:station:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:top:tracks|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:station:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:toplist)$").a(LinkType.RADIO_PLAYLIST).a(true).c(null).d("A radio station for a specific playlist").e("spotify:station:user:thewhitehouse:playlist:2Zve7PqFSlGl0ojgGnhFTm").f("spotify:station:user:playlist:").a());
        a.add(new a("radio_root").a("spotify:radio").a("spotify:app:radio").a("spotify:internal:radio").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:radio|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:app:radio|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:radio)$").a(LinkType.RADIO_ROOT).a(true).c(null).d("The root of the Radio hierarchy").e("spotify:radio").a());
        a.add(new a("radio_track").a("spotify:station:track:{track_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:station:track:[a-zA-Z0-9]{22})$").a(LinkType.RADIO_TRACK).a(true).c(null).d("A radio station for a specifc track").e("spotify:station:track:6ni0mMZfUJkM7BWj6l5CFx").f("spotify:station:track:").f("spotify:station:track:6ni0mMZfUJkM7BWj6l5CF_x").a());
        a.add(new a("recent_shares").a("spotify:internal:recent-shares").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:recent-shares)$").a(LinkType.RECENT_SHARES).a(false).c(null).d(null).a());
        a.add(new a("remote_configuration").a("spotify:remoteconfiguration").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:remoteconfiguration)$").a(LinkType.REMOTE_CONFIGURATION).a(false).c("map-props-squad").d("Uri for MADProps hidden view to test the integration with new app").a());
        a.add(new a("remote_control").a("spotify:remote-control").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:remote-control)$").a(LinkType.REMOTE_CONTROL).a(false).c(null).d(null).a());
        a.add(new a("remove_all_episodes").a("spotify:remove_all_episodes").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:remove_all_episodes)$").a(LinkType.REMOVE_ALL_EPISODES).a(false).c(null).d(null).a());
        String str8 = "x-stream";
        a.add(new a("running_categories").a("spotify:running:category:{category_slug as text}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:running:category:[^:_#]+)$").a(LinkType.RUNNING_CATEGORIES).a(true).c(str8).d("A Running playlist with content type category. Similar to running_original_content.").e("spotify:running:category:seasonal").e("spotify:running:category:latest-running-music").f("spotify:running:category:").a());
        a.add(new a("running_original_content").a("spotify:running:original-content:{category_slug as text}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:running:original-content:[^:_#]+)$").a(LinkType.RUNNING_ORIGINAL_CONTENT).a(true).c(str8).d("A Running playlist with content type original-content. Similar to running_categories.").e("spotify:running:original-content:go").e("spotify:running:original-content:escape").f("spotify:running:original-content:original:").a());
        a.add(new a("running_root").a("spotify:running").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:running)$").a(LinkType.RUNNING_ROOT).a(true).c(str8).d("The root of the running hierarchy within Running on mobile").e("spotify:running").a());
        a.add(new a("sd_storage_alert_dialog").a("spotify:sd_storage_alert_dialog").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:sd_storage_alert_dialog)$").a(LinkType.SD_STORAGE_ALERT_DIALOG).a(false).c(null).d(null).a());
        a.add(new a("search_query").a("spotify:search:{query as text}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:search:[^:_#]+)$").a(LinkType.SEARCH_QUERY).a(true).c(null).d("A specific query in the context of Search").e("spotify:search:bieber").e("spotify:search:hallo").e("https://open.spotify.com/search/hodor").f("spotify:search:").a());
        a.add(new a("search_root").a("spotify:search").a("spotify:search:{search-query-pattern as Query}").a("spotify:search:{category as text}:{search-query-pattern as Query}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:search|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:search:.*|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:search:[^:_#]+:.*)$").a(LinkType.SEARCH_ROOT).a(true).c(null).d("The root of the Search hierarchy").e("spotify:search").e("https://open.spotify.com/search").a());
        a.add(new a("settings").a("spotify:config").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:config)$").a(LinkType.SETTINGS).a(false).c(null).d(null).a());
        a.add(new a("share").a("spotify:share").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:share)$").a(LinkType.SHARE).a(false).c(null).d(null).a());
        a.add(new a("share_flow").a("spotify:app:share-flow").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:app:share-flow)$").a(LinkType.SHARE_FLOW).a(false).c(null).d(null).a());
        a.add(new a("share_spotify").a("spotify:share:spotify").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:share:spotify)$").a(LinkType.SHARE_SPOTIFY).a(false).c(null).d(null).a());
        a.add(new a("show_episode").a("spotify:episode:{episode_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:episode:[a-zA-Z0-9]{22})$").a(LinkType.SHOW_EPISODE).a(true).c(null).d("A specific episode of a show in the context of Show").e("spotify:episode:4p6qwHeZbgSQ8V1lys8ZYg").f("spotify:episode:").f("spotify:episode:bad").f("spotify:episode:5yolys8XG4q7YfjYGl5L_f").a());
        a.add(new a("show_episode_timestamp").a("spotify:episode:{episode_id as Base62}:{offset as text}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:episode:[a-zA-Z0-9]{22}:[^:_#]+)$").a(LinkType.SHOW_EPISODE_TIMESTAMP).a(true).c("Spoderman").d("A specific time of a Podcast episode. The offset is expected to be in '[{{hours}}h][{{minutes}}m][{{seconds}}s]' format from the beginning of the track/episode.").e("spotify:episode:4p6qwHeZbgSQ8V1lys8ZYg:2m00s").e("spotify:episode:4p6qwHeZbgSQ8V1lys8ZYg:0m55s").e("spotify:episode:4p6qwHeZbgSQ8V1lys8ZYg:1h00m12s").f("spotify:episode:").f("spotify:episode:bad").f("spotify:episode:5yolys8XG4q7YfjYGl5L_f").f("spotify:episode:4p6qwHeZbgSQ8V1lys8ZYg").f("spotify:episode:4p6qwHeZbgSQ8V1lys8ZYg:2:02:30").a());
        String str9 = "spotify:show:";
        a.add(new a("show_podcast").a("spotify:internal:podcast:{show_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:podcast:[a-zA-Z0-9]{22})$").a(LinkType.SHOW_PODCAST).a(false).c(null).d("A specific Podcast instance of a show entity.").e("spotify:internal:podcast:1N14ZPZmu4sw62Ry5WnRyS").f(str9).f("spotify:podcast:").f("spotify:internal:podcast").f("spotify:internal:podcast:bad").f("spotify:internal:podcast:5yolys8XG4q7YfjYGl5L_f").a());
        a.add(new a("show_root").a("spotify:shows").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:shows)$").a(LinkType.SHOW_ROOT).a(true).c(null).d("The root view of spotify shows (including both videos and podcasts)").e("spotify:shows").f("spotify:shows:").a());
        a.add(new a("show_show").a("spotify:show:{show_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:show:[a-zA-Z0-9]{22})$").a(LinkType.SHOW_SHOW).a(true).c(null).d("A specific show in the context of Show").e("spotify:show:1N14ZPZmu4sw62Ry5WnRyS").f(str9).f("spotify:show:bad").f("spotify:show:5yolys8XG4q7YfjYGl5L_f").a());
        a.add(new a("show_video").a("spotify:internal:video:{show_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:video:[a-zA-Z0-9]{22})$").a(LinkType.SHOW_VIDEO).a(false).c(null).d("A specific video instance of a show entity.").e("spotify:internal:video:6mvrJsCQHn2Hp4dkTsfHl6").f(str9).f("spotify:video:").f("spotify:internal:video").f("spotify:internal:video:bad").f("spotify:internal:video:5yolys8XG4q7YfjYGl5L_f").a());
        a.add(new a("signup_v1_login").a("spotify:signup-v1:login").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:signup-v1:login)$").a(LinkType.SIGNUP_V1_LOGIN).a(false).c(null).d(null).a());
        a.add(new a("signup_v1_signup").a("spotify:signup-v1:signup").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:signup-v1:signup)$").a(LinkType.SIGNUP_V1_SIGNUP).a(false).c(null).d(null).a());
        a.add(new a("signup_v1_start").a("spotify:signup-v1:start").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:signup-v1:start)$").a(LinkType.SIGNUP_V1_START).a(false).c(null).d(null).a());
        a.add(new a("smartdevicelink").a("spotify:app:smartdevicelink").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:app:smartdevicelink)$").a(LinkType.SMARTDEVICELINK).a(false).c(null).d(null).a());
        a.add(new a("socialsession").a("spotify:socialsession:{session_id as text}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:socialsession:[^:_#]+)$").a(LinkType.SOCIALSESSION).a(true).c(str5).d("Uri to join a social session hosted by another user").a());
        a.add(new a("special").a("spotify:special:{slug_a as text}").a("spotify:special:{slug_a as text}:{slug_b as text}").a("spotify:special:{slug_a as text}:{slug_b as text}:{slug_c as text}").a("spotify:special:{slug_a as text}:{slug_b as text}:{slug_c as text}:{slug_d as text}").a("spotify:special:{slug_a as text}:{slug_b as text}:{slug_c as text}:{slug_d as text}:{slug_e as text}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:special:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:special:[^:_#]+:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:special:[^:_#]+:[^:_#]+:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:special:[^:_#]+:[^:_#]+:[^:_#]+:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:special:[^:_#]+:[^:_#]+:[^:_#]+:[^:_#]+:[^:_#]+)$").a(LinkType.SPECIAL).a(false).c(null).d(null).a());
        String str10 = "spotify";
        a.add(new a(str10).a(str10).b("^(spotify)$").a(LinkType.SPOTIFY).a(false).c(null).d(null).a());
        a.add(new a("spotify_service").a("spotify:internal:service").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:service)$").a(LinkType.SPOTIFY_SERVICE).a(false).c(null).d(null).a());
        a.add(new a("start_trial_upsell").a("spotify:upsell:start_trial").a("spotify:start_trial_upsell").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:upsell:start_trial|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:start_trial_upsell)$").a(LinkType.START_TRIAL_UPSELL).a(false).c(null).d(null).a());
        a.add(new a("station").a("spotify:station:{slug_a as text}").a("spotify:station:{slug_a as text}:{slug_b as text}").a("spotify:station:{slug_a as text}:{slug_b as text}:{slug_c as text}").a("spotify:station:{slug_a as text}:{slug_b as text}:{slug_c as text}:{slug_d as text}").a("spotify:station:user:{user_name as Username}:{category as text}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:station:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:station:[^:_#]+:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:station:[^:_#]+:[^:_#]+:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:station:[^:_#]+:[^:_#]+:[^:_#]+:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:station:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:[^:_#]+)$").a(LinkType.STATION).a(false).c(null).d(null).a());
        a.add(new a("station_cluster").a("spotify:station:user:{user_name as Username}:cluster:{gid as GidID}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:station:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:cluster:[^:?#]+)$").a(LinkType.STATION_CLUSTER).a(false).c(null).d(null).a());
        a.add(new a("station_playlist_v2").a("spotify:station:playlist:{playlist_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:station:playlist:[a-zA-Z0-9]{22})$").a(LinkType.STATION_PLAYLIST_V2).a(false).c(null).d(null).a());
        a.add(new a("stations_promo").a("spotify:stations-promo").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:stations-promo)$").a(LinkType.STATIONS_PROMO).a(false).c("vice").d("Uri for Stations promo page that can start the Stations app or help the user install it").a());
        a.add(new a("taste_artist").a("spotify:internal:taste:artist").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:taste:artist)$").a(LinkType.TASTE_ARTIST).a(false).c(null).d(null).a());
        a.add(new a("taste_genre").a("spotify:internal:taste:genre").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:taste:genre)$").a(LinkType.TASTE_GENRE).a(false).c(null).d(null).a());
        a.add(new a("taste_mixing").a("spotify:internal:taste:mixing").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:taste:mixing)$").a(LinkType.TASTE_MIXING).a(false).c(null).d(null).a());
        a.add(new a("taste_onboarding").a("spotify:internal:taste-onboarding").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:taste-onboarding)$").a(LinkType.TASTE_ONBOARDING).a(false).c(str7).d("Uri for Taste Onboarding").e("spotify:internal:taste-onboarding").a());
        a.add(new a("taste_onboarding_tracks").a("spotify:internal:taste-onboarding-tracks").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:taste-onboarding-tracks)$").a(LinkType.TASTE_ONBOARDING_TRACKS).a(false).c(str7).d("Uri for Taste Onboarding track selection").e("spotify:internal:taste-onboarding-tracks").a());
        a.add(new a("taste_onboarding_update").a("spotify:internal:taste-onboarding-update").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:taste-onboarding-update)$").a(LinkType.TASTE_ONBOARDING_UPDATE).a(false).c(str7).d("Uri for Taste Onboarding update").e("spotify:internal:taste-onboarding-update").a());
        a.add(new a("terms_and_conditions_permissions").a("spotify:intro:permissions").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:intro:permissions)$").a(LinkType.TERMS_AND_CONDITIONS_PERMISSIONS).a(false).c(null).d(null).a());
        a.add(new a("terms_and_conditions_tos").a("spotify:intro:tos:dialog").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:intro:tos:dialog)$").a(LinkType.TERMS_AND_CONDITIONS_TOS).a(false).c(null).d(null).a());
        a.add(new a("terms_and_conditions_tos_text").a("spotify:intro:tos:text").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:intro:tos:text)$").a(LinkType.TERMS_AND_CONDITIONS_TOS_TEXT).a(false).c(null).d(null).a());
        a.add(new a("together").a("spotify:together").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:together)$").a(LinkType.TOGETHER).a(false).c("performance-squad").d("Spotify Together").a());
        String str11 = "toplist";
        a.add(new a(str11).a(str11).a("spotify:user:{user_name as Username}:toplist").a("spotify:user:{user_name as Username}:top:tracks").b("^(toplist|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:toplist|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:top:tracks)$").a(LinkType.TOPLIST).a(false).c(null).d(null).a());
        a.add(new a(TrackData.TYPE_TRACK).a("spotify:track:{track_id as Base62}").a("spotify:local:{slug as text}").a("spotify:local:{slug as text}:{slug as text}").a("spotify:local:{slug as text}:{slug as text}:{slug as text}").a("spotify:local:{slug as text}:{slug as text}:{slug as text}:{slug as text}").a("spotify:local:{slug as text}:{slug as text}:{slug as text}:{slug as text}:{slug as text}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:track:[a-zA-Z0-9]{22}|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:local:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:local:[^:_#]+:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:local:[^:_#]+:[^:_#]+:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:local:[^:_#]+:[^:_#]+:[^:_#]+:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:local:[^:_#]+:[^:_#]+:[^:_#]+:[^:_#]+:[^:_#]+)$").a(LinkType.TRACK).a(true).c(str3).d("The overview page for a specific track").e("spotify:track:5OQsiBsky2k2kDKy2bX2eT").e("https://open.spotify.com/track/5OQsiBsky2k2kDKy2bX2eT").f("spotify:track:").f("spotify:track:bad").f("spotify:track:5OQsiBsky2k2kDKy2bX2_T").a());
        a.add(new a("track_autoplay").a("spotify:track:{track_id as Base62}:play").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:track:[a-zA-Z0-9]{22}:play)$").a(LinkType.TRACK_AUTOPLAY).a(false).c(null).d(null).a());
        a.add(new a("track_radio").a("spotify:radio:track:{track_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:radio:track:[a-zA-Z0-9]{22})$").a(LinkType.TRACK_RADIO).a(false).c(null).d(null).a());
        a.add(new a("trial_reminder").a("spotify:trial_reminder").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:trial_reminder)$").a(LinkType.TRIAL_REMINDER).a(false).c(null).d(null).a());
        a.add(new a("trial_reminder_spotify_free").a("spotify:trial_reminder:spotify_free").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:trial_reminder:spotify_free)$").a(LinkType.TRIAL_REMINDER_SPOTIFY_FREE).a(false).c(null).d(null).a());
        a.add(new a("update").a("spotify:update").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:update)$").a(LinkType.UPDATE).a(false).c(null).d(null).a());
        a.add(new a("upsell").a("spotify:upsell").a("spotify:app:upsell").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:upsell|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:app:upsell)$").a(LinkType.UPSELL).a(false).c(null).d(null).a());
        a.add(new a("upsell_activating_trial").a("spotify:upsell:activating_trial").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:upsell:activating_trial)$").a(LinkType.UPSELL_ACTIVATING_TRIAL).a(false).c(null).d(null).a());
        a.add(new a("upsell_capping_reached").a("spotify:upsell:capping_reached").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:upsell:capping_reached)$").a(LinkType.UPSELL_CAPPING_REACHED).a(false).c(null).d(null).a());
        a.add(new a("upsell_confirm_consumable").a("spotify:upsell:confirm_consumable").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:upsell:confirm_consumable)$").a(LinkType.UPSELL_CONFIRM_CONSUMABLE).a(false).c(null).d(null).a());
        a.add(new a("upsell_content_unavailable").a("spotify:upsell:content-unavailable").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:upsell:content-unavailable)$").a(LinkType.UPSELL_CONTENT_UNAVAILABLE).a(false).c(null).d(null).a());
        a.add(new a("upsell_extreme_quality").a("spotify:upsell:choose_extreme_quality").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:upsell:choose_extreme_quality)$").a(LinkType.UPSELL_EXTREME_QUALITY).a(false).c(null).d(null).a());
        a.add(new a("upsell_interstitial_end_of_trial").a("spotify:upsell:interstitial:end_of_trial").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:upsell:interstitial:end_of_trial)$").a(LinkType.UPSELL_INTERSTITIAL_END_OF_TRIAL).a(false).c(null).d(null).a());
        a.add(new a("upsell_no_offline").a("spotify:upsell:no_offline").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:upsell:no_offline)$").a(LinkType.UPSELL_NO_OFFLINE).a(false).c(null).d(null).a());
        a.add(new a("upsell_no_queue").a("spotify:upsell:no_queue").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:upsell:no_queue)$").a(LinkType.UPSELL_NO_QUEUE).a(false).c(null).d(null).a());
        a.add(new a("upsell_no_streaming").a("spotify:upsell:no_streaming").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:upsell:no_streaming)$").a(LinkType.UPSELL_NO_STREAMING).a(false).c(null).d(null).a());
        a.add(new a("upsell_out_of_skips").a("spotify:upsell:out_of_skips").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:upsell:out_of_skips)$").a(LinkType.UPSELL_OUT_OF_SKIPS).a(false).c(null).d(null).a());
        a.add(new a("upsell_out_of_skips_consumables").a("spotify:upsell:out_of_skips_consumables").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:upsell:out_of_skips_consumables)$").a(LinkType.UPSELL_OUT_OF_SKIPS_CONSUMABLES).a(false).c(null).d(null).a());
        a.add(new a("upsell_out_of_skips_plus").a("spotify:upsell:out_of_skips_plus").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:upsell:out_of_skips_plus)$").a(LinkType.UPSELL_OUT_OF_SKIPS_PLUS).a(false).c(null).d(null).a());
        a.add(new a("upsell_premium_only").a("spotify:upsell:premium_only").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:upsell:premium_only)$").a(LinkType.UPSELL_PREMIUM_ONLY).a(false).c(null).d(null).a());
        a.add(new a("upsell_showcase").a("spotify:upsell:showcase").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:upsell:showcase)$").a(LinkType.UPSELL_SHOWCASE).a(false).c(null).d(null).a());
        a.add(new a("upsell_stuck_in_shuffle").a("spotify:upsell:stuck_in_shuffle").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:upsell:stuck_in_shuffle)$").a(LinkType.UPSELL_STUCK_IN_SHUFFLE).a(false).c(null).d(null).a());
        a.add(new a("upsell_trial_ended").a("spotify:upsell:trial-ended").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:upsell:trial-ended)$").a(LinkType.UPSELL_TRIAL_ENDED).a(false).c(null).d(null).a());
        a.add(new a("upsell_trial_started").a("spotify:upsell:trial-started").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:upsell:trial-started)$").a(LinkType.UPSELL_TRIAL_STARTED).a(false).c(null).d(null).a());
        a.add(new a("user_playlist_radio").a("spotify:radio:user:{user_name as Username}:{cat as text}:{subcat as text}").a("spotify:radio:user:{user_name as Username}:playlist:{playlist_id as Base62}").a("spotify:radio:user:{user_name as Username}:top:tracks").a("spotify:radio:user:{user_name as Username}:toplist").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:radio:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:[^:_#]+:[^:_#]+|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:radio:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:playlist:[a-zA-Z0-9]{22}|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:radio:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:top:tracks|[Ss][Pp][Oo][Tt][Ii][Ff][Yy]:radio:user:(%[a-zA-Z0-9]{2,3}|[^%A-Z:#?]+)+:toplist)$").a(LinkType.USER_PLAYLIST_RADIO).a(false).c(null).d(null).a());
        a.add(new a("video_debug").a("spotify:internal:video_debug").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:video_debug)$").a(LinkType.VIDEO_DEBUG).a(false).c(null).d(null).a());
        a.add(new a("video_episode").a("spotify:internal:video:episode:{episode_id as Base62}").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:internal:video:episode:[a-zA-Z0-9]{22})$").a(LinkType.VIDEO_EPISODE).a(false).c(null).d("A specific episode of a video in the context of a video show").e("spotify:internal:video:episode:1N14ZPZmu4sw62Ry5WnRyS").f("spotify:episode:1N14ZPZmu4sw62Ry5WnRyS").f("spotify:video:episode:").f("spotify:internal:video").f("spotify:internal:video:bad").f("spotify:internal:video:5yolys8XG4q7YfjYGl5L_f").a());
        a.add(new a("video_service").a("spotify:video_service").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:video_service)$").a(LinkType.VIDEO_SERVICE).a(false).c(null).d(null).a());
        a.add(new a("voice_assistant_root").a("spotify:voice-assistant").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:voice-assistant)$").a(LinkType.VOICE_ASSISTANT_ROOT).a(false).c("Ask").d("The root view of spotify voice assistant").e("spotify:voice-assistant").f("spotify:voice-assistant:").a());
        a.add(new a("widget").a("spotify:widget").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:widget)$").a(LinkType.WIDGET).a(false).c(null).d(null).a());
        a.add(new a("wifi_only_upsell").a("spotify:wifi_only_upsell").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:wifi_only_upsell)$").a(LinkType.WIFI_ONLY_UPSELL).a(false).c(null).d(null).a());
        a.add(new a("wifimft_group3_no_more_time").a("spotify:wifimft_group3_no_more_time").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:wifimft_group3_no_more_time)$").a(LinkType.WIFIMFT_GROUP3_NO_MORE_TIME).a(false).c(null).d(null).a());
        a.add(new a("wrapped_data_stories").a("spotify:wrapped:datastories").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:wrapped:datastories)$").a(LinkType.WRAPPED_DATA_STORIES).a(false).c("soma").d("Native integration for Wrapped Datastories marketing campaign").a());
        a.add(new a("wrapped_home").a("spotify:wrapped:home").b("^([Ss][Pp][Oo][Tt][Ii][Ff][Yy]:wrapped:home)$").a(LinkType.WRAPPED_HOME).a(false).c("soma").d("Native integration for Wrapped marketing campaign").a());
        String str12 = "*";
        b.addURI(str12, "", LinkType.ACTIVATE.ordinal());
        b.addURI(str12, "ad/*", LinkType.AD.ordinal());
        b.addURI(str12, str2, LinkType.ADD_TO_PLAYLIST.ordinal());
        b.addURI(str12, "album/*", LinkType.ALBUM.ordinal());
        b.addURI(str12, "album/*/play", LinkType.ALBUM_AUTOPLAY.ordinal());
        b.addURI(str12, "album/*/play/episode/*", LinkType.ALBUM_AUTOPLAY.ordinal());
        b.addURI(str12, "album/*/play/track/*", LinkType.ALBUM_AUTOPLAY.ordinal());
        b.addURI(str12, "album/*/play/*", LinkType.ALBUM_AUTOPLAY.ordinal());
        b.addURI(str12, "annotate_discard_changes", LinkType.ANNOTATE_DISCARD_CHANGES.ordinal());
        b.addURI(str12, "annotate_playlist", LinkType.ANNOTATE_PLAYLIST.ordinal());
        b.addURI(str12, "app/app_rater", LinkType.APP_RATER.ordinal());
        b.addURI(str12, "app/appprotocol", LinkType.APP_PROTOCOL.ordinal());
        b.addURI(str12, "app/browse", LinkType.BROWSE_ROOT.ordinal());
        b.addURI(str12, "app/browse/new_releases", LinkType.BROWSE_NEW_RELEASES.ordinal());
        b.addURI(str12, "app/browse/*", LinkType.BROWSE_ROOT.ordinal());
        b.addURI(str12, "app/browse/*/*", LinkType.BROWSE_ROOT.ordinal());
        b.addURI(str12, "app/browse/*/*/*", LinkType.BROWSE_ROOT.ordinal());
        b.addURI(str12, "app/browse/*/*/*/*", LinkType.BROWSE_ROOT.ordinal());
        b.addURI(str12, "app/browse/*/*/*/*/*", LinkType.BROWSE_ROOT.ordinal());
        b.addURI(str12, "app/chart/*", LinkType.CHARTS_SPECIFIC.ordinal());
        b.addURI(str12, "app/concerts", LinkType.BROWSE_CONCERTS.ordinal());
        b.addURI(str12, "app/concerts/concert-group", LinkType.EVENTS_CONCERT_GROUP.ordinal());
        b.addURI(str12, "app/findfriends", LinkType.FINDFRIENDS.ordinal());
        b.addURI(str12, "app/notification_inbox", LinkType.NOTIFICATION_INBOX.ordinal());
        b.addURI(str12, "app/radio", LinkType.RADIO_ROOT.ordinal());
        b.addURI(str12, "app/share-flow", LinkType.SHARE_FLOW.ordinal());
        b.addURI(str12, "app/smartdevicelink", LinkType.SMARTDEVICELINK.ordinal());
        b.addURI(str12, "app/tinkerbell", LinkType.ONBOARDING_TOOLTIP.ordinal());
        b.addURI(str12, "app/upsell", LinkType.UPSELL.ordinal());
        b.addURI(str12, "artist/*", LinkType.ARTIST.ordinal());
        b.addURI(str12, "artist/*/about", LinkType.ARTIST_ABOUT.ordinal());
        b.addURI(str12, "artist/*/albums", LinkType.ARTIST_ALBUMS.ordinal());
        b.addURI(str12, "artist/*/appears-on", LinkType.ARTIST_APPEARS_ON.ordinal());
        b.addURI(str12, "artist/*/appears_on", LinkType.ARTIST_APPEARS_ON.ordinal());
        b.addURI(str12, "artist/*/biography", LinkType.ARTIST_BIOGRAPHY.ordinal());
        b.addURI(str12, "artist/*/compilations", LinkType.ARTIST_COMPILATIONS.ordinal());
        b.addURI(str12, "artist/*/concert", LinkType.ARTIST_CONCERT.ordinal());
        b.addURI(str12, "artist/*/concerts", LinkType.ARTIST_CONCERTS.ordinal());
        b.addURI(str12, "artist/*/gallery", LinkType.ARTIST_GALLERY.ordinal());
        b.addURI(str12, "artist/*/play", LinkType.ARTIST_AUTOPLAY.ordinal());
        b.addURI(str12, "artist/*/play/episode/*", LinkType.ARTIST_AUTOPLAY.ordinal());
        b.addURI(str12, "artist/*/play/track/*", LinkType.ARTIST_AUTOPLAY.ordinal());
        b.addURI(str12, "artist/*/play/*", LinkType.ARTIST_AUTOPLAY.ordinal());
        b.addURI(str12, "artist/*/playlists", LinkType.ARTIST_PLAYLISTS.ordinal());
        b.addURI(str12, "artist/*/related", LinkType.ARTIST_RELATED.ordinal());
        b.addURI(str12, "artist/*/releases", LinkType.ARTIST_RELEASES.ordinal());
        b.addURI(str12, "artist/*/singles", LinkType.ARTIST_SINGLES.ordinal());
        b.addURI(str12, "autologin", LinkType.AUTOLOGIN.ordinal());
        b.addURI(str12, "browse", LinkType.BROWSE_ROOT.ordinal());
        b.addURI(str12, "chart/*", LinkType.CHARTS_SPECIFIC.ordinal());
        b.addURI(str12, "charts", LinkType.CHARTS_ROOT.ordinal());
        b.addURI(str12, "charts/root", LinkType.CHARTS_ROOT.ordinal());
        b.addURI(str12, "charts/*", LinkType.CHARTS_SUBPAGE.ordinal());
        b.addURI(str12, "churn_locked_state", LinkType.CHURN_LOCKED_STATE.ordinal());
        b.addURI(str12, "collection", LinkType.COLLECTION_ROOT.ordinal());
        b.addURI(str12, "collection/albums", LinkType.COLLECTION_ALBUM_OVERVIEW.ordinal());
        b.addURI(str12, "collection/artists", LinkType.COLLECTION_ARTIST_OVERVIEW.ordinal());
        b.addURI(str12, "collection/listen-later-episodes", LinkType.COLLECTION_LISTENLATER_EPISODES.ordinal());
        b.addURI(str12, "collection/nft-made-for-you", LinkType.COLLECTION_NFT_MADE_FOR_YOU.ordinal());
        b.addURI(str12, "collection/offline-episodes", LinkType.COLLECTION_OFFLINE_EPISODES.ordinal());
        b.addURI(str12, "collection/offlined-episodes", LinkType.COLLECTION_OFFLINED_EPISODES.ordinal());
        b.addURI(str12, "collection/playlists", LinkType.COLLECTION_ROOTLIST.ordinal());
        b.addURI(str12, "collection/podcasts", LinkType.COLLECTION_PODCASTS.ordinal());
        b.addURI(str12, "collection/podcasts/downloads", LinkType.COLLECTION_PODCASTS_DOWNLOADS.ordinal());
        b.addURI(str12, "collection/podcasts/episodes", LinkType.COLLECTION_PODCASTS_EPISODES.ordinal());
        b.addURI(str12, "collection/podcasts/following", LinkType.COLLECTION_PODCASTS_FOLLOWING.ordinal());
        b.addURI(str12, "collection/podcasts/offline", LinkType.COLLECTION_OFFLINE_PODCASTS_EPISODES.ordinal());
        b.addURI(str12, "collection/podcasts/unfinished", LinkType.COLLECTION_PODCASTS_EPISODES_UNFINISHED.ordinal());
        b.addURI(str12, "collection/podcasts/unplayed", LinkType.COLLECTION_UNPLAYED_PODCASTS_EPISODES.ordinal());
        b.addURI(str12, "collection/radio", LinkType.COLLECTION_RADIO.ordinal());
        b.addURI(str12, "collection/shows", LinkType.COLLECTION_SHOWS.ordinal());
        b.addURI(str12, "collection/tracks", LinkType.COLLECTION_TRACKS.ordinal());
        b.addURI(str12, "collection/unplayed-episodes", LinkType.COLLECTION_UNPLAYED_EPISODES.ordinal());
        b.addURI(str12, "collection/videos", LinkType.COLLECTION_VIDEOS.ordinal());
        b.addURI(str12, "collection/videos/unplayed", LinkType.COLLECTION_UNPLAYED_VIDEOS.ordinal());
        b.addURI(str12, "concert/songkick/events/*", LinkType.CONCERT_ENTITY.ordinal());
        b.addURI(str12, "concert/*", LinkType.CONCERT_ENTITY.ordinal());
        b.addURI(str12, "concerts", LinkType.BROWSE_CONCERTS.ordinal());
        b.addURI(str12, "concerts/location-search", LinkType.CONCERTS_LOCATION_SEARCH.ordinal());
        b.addURI(str12, "config", LinkType.SETTINGS.ordinal());
        b.addURI(str12, "confirm_deletion", LinkType.CONFIRM_DELETION.ordinal());
        b.addURI(str12, "connect-device-picker", LinkType.PLAY_DEVICEPICKER.ordinal());
        b.addURI(str12, "create_rename_playlist", LinkType.CREATE_RENAME_PLAYLIST.ordinal());
        b.addURI(str12, "daily-mix-hub", LinkType.DAILY_MIX_HUB.ordinal());
        b.addURI(str12, "dailymix/*", LinkType.DAILYMIX.ordinal());
        b.addURI(str12, "deleting_cache_dialog", LinkType.DELETING_CACHE_DIALOG.ordinal());
        b.addURI(str12, "discover", LinkType.BROWSE_DISCOVER.ordinal());
        b.addURI(str12, "disk_almost_full", LinkType.DISK_ALMOST_FULL.ordinal());
        b.addURI(str12, "driving", LinkType.DRIVING_MODE.ordinal());
        b.addURI(str12, "dynamic_upsell", LinkType.DYNAMIC_UPSELL.ordinal());
        b.addURI(str12, "episode/*", LinkType.SHOW_EPISODE.ordinal());
        b.addURI(str12, "episode/*/play", LinkType.EPISODE_AUTOPLAY.ordinal());
        b.addURI(str12, "episode/*/*", LinkType.SHOW_EPISODE_TIMESTAMP.ordinal());
        b.addURI(str12, "eventsender", LinkType.EVENTSENDER.ordinal());
        b.addURI(str12, "feed", LinkType.FEED.ordinal());
        b.addURI(str12, "find", LinkType.FIND.ordinal());
        b.addURI(str12, "find/*", LinkType.FIND.ordinal());
        b.addURI(str12, "findfriends", LinkType.FINDFRIENDS.ordinal());
        b.addURI(str12, "follow/artists", LinkType.FOLLOW_ARTISTS.ordinal());
        b.addURI(str12, "follow/facebook", LinkType.FOLLOW_FACEBOOK.ordinal());
        b.addURI(str12, "followfeed", LinkType.FOLLOWFEED.ordinal());
        b.addURI(str12, "fullscreen_videoplayer", LinkType.FULLSCREEN_VIDEO_PLAYER.ordinal());
        b.addURI(str12, "genre/*", LinkType.BROWSE_GENRES.ordinal());
        b.addURI(str12, "genre/*/*", LinkType.BROWSE_GENRES.ordinal());
        b.addURI(str12, "genre/*/*/*", LinkType.BROWSE_GENRES.ordinal());
        b.addURI(str12, "genre/*/*/*/*", LinkType.BROWSE_GENRES.ordinal());
        b.addURI(str12, "genre/*/*/*/*/*", LinkType.BROWSE_GENRES.ordinal());
        b.addURI(str12, "goldenpath", LinkType.GOLDEN_PATH.ordinal());
        b.addURI(str12, "goldenpath/goldenpathtutorialstep01", LinkType.GOLDEN_PATH.ordinal());
        b.addURI(str12, "goldenpath/goldenpathtutorialstep02", LinkType.GOLDEN_PATH.ordinal());
        b.addURI(str12, "goldenpath/reference-top-list", LinkType.GOLDEN_PATH.ordinal());
        b.addURI(str12, "goldenpath/toptracks", LinkType.GOLDEN_PATH.ordinal());
        b.addURI(str12, "home", LinkType.HOME_ROOT.ordinal());
        b.addURI(str12, "home/*", LinkType.HOME_DRILLDOWN.ordinal());
        b.addURI(str12, "hub/browse", LinkType.BROWSE_ROOT.ordinal());
        b.addURI(str12, "hub/browse/*", LinkType.BROWSE_ROOT.ordinal());
        b.addURI(str12, "hub/browse/*/*", LinkType.BROWSE_ROOT.ordinal());
        b.addURI(str12, "hub/browse/*/*/*", LinkType.BROWSE_ROOT.ordinal());
        b.addURI(str12, "hub/browse/*/*/*/*", LinkType.BROWSE_ROOT.ordinal());
        b.addURI(str12, "hub/browse/*/*/*/*/*", LinkType.BROWSE_ROOT.ordinal());
        b.addURI(str12, "imageset/*", LinkType.BROWSE_IMAGESET.ordinal());
        b.addURI(str12, "internal/activate_premium_trial", LinkType.ACTIVATE_PREMIUM_TRIAL.ordinal());
        b.addURI(str12, "internal/ads/mic-permissions", LinkType.ADS_MIC_PERMISSIONS.ordinal());
        b.addURI(str12, "internal/anchorfunnel/home", LinkType.ANCHOR_FUNNEL.ordinal());
        b.addURI(str12, "internal/anchorfunnel/quicksilver", LinkType.ANCHOR_FUNNEL.ordinal());
        b.addURI(str12, "internal/anchorfunnel/yourlibrary", LinkType.ANCHOR_FUNNEL.ordinal());
        b.addURI(str12, "internal/collection/albums", LinkType.COLLECTION_ALBUM_OVERVIEW.ordinal());
        b.addURI(str12, "internal/collection/artists", LinkType.COLLECTION_ARTIST_OVERVIEW.ordinal());
        b.addURI(str12, "internal/collection/offlined-episodes", LinkType.COLLECTION_OFFLINED_EPISODES.ordinal());
        b.addURI(str12, "internal/collection/playlists", LinkType.COLLECTION_ROOTLIST.ordinal());
        b.addURI(str12, "internal/collection/podcasts/offline", LinkType.COLLECTION_OFFLINE_PODCASTS_EPISODES.ordinal());
        b.addURI(str12, "internal/collection/podcasts/unplayed", LinkType.COLLECTION_UNPLAYED_PODCASTS_EPISODES.ordinal());
        b.addURI(str12, "internal/collection/radio", LinkType.COLLECTION_RADIO.ordinal());
        b.addURI(str12, "internal/collection/shows", LinkType.COLLECTION_SHOWS.ordinal());
        b.addURI(str12, "internal/collection/tracks", LinkType.COLLECTION_TRACKS.ordinal());
        b.addURI(str12, "internal/collection/unplayed-episodes", LinkType.COLLECTION_UNPLAYED_EPISODES.ordinal());
        b.addURI(str12, "internal/collection/videos", LinkType.COLLECTION_VIDEOS.ordinal());
        b.addURI(str12, "internal/collection/videos/unplayed", LinkType.COLLECTION_UNPLAYED_VIDEOS.ordinal());
        b.addURI(str12, "internal/concerts/webview", LinkType.CONCERTS_WEBVIEW.ordinal());
        b.addURI(str12, "internal/data-saver-learn-more", LinkType.DATA_SAVER_LEARN_MORE.ordinal());
        b.addURI(str12, "internal/data-saver-opt-in", LinkType.DATA_SAVER_OPT_IN.ordinal());
        b.addURI(str12, "internal/debug", LinkType.DEBUG.ordinal());
        b.addURI(str12, "internal/debug/*", LinkType.DEBUG.ordinal());
        b.addURI(str12, "internal/devices", LinkType.DEVICES.ordinal());
        b.addURI(str12, "internal/dummy", LinkType.DUMMY.ordinal());
        b.addURI(str12, "internal/format_list_chart/spotify/playlist/*", LinkType.FORMAT_LIST_CHART.ordinal());
        b.addURI(str12, "internal/format_list_chart/spotify/playlist/*/play", LinkType.FORMAT_LIST_CHART_AUTOPLAY.ordinal());
        b.addURI(str12, "internal/format_list_chart/spotify/user/*", LinkType.FORMAT_LIST_CHART.ordinal());
        b.addURI(str12, "internal/format_list_chart/spotify/user/*/playlist/*", LinkType.FORMAT_LIST_CHART.ordinal());
        b.addURI(str12, "internal/format_list_chart/spotify/user/*/playlist/*/play", LinkType.FORMAT_LIST_CHART_AUTOPLAY.ordinal());
        b.addURI(str12, "internal/format_list_chart/spotify/user/*/playlist/*/play/track/*", LinkType.FORMAT_LIST_CHART_AUTOPLAY.ordinal());
        b.addURI(str12, "internal/format_list_chart/spotify/user/*/top/tracks", LinkType.FORMAT_LIST_CHART.ordinal());
        b.addURI(str12, "internal/format_list_chart/spotify/user/*/toplist", LinkType.FORMAT_LIST_CHART.ordinal());
        b.addURI(str12, "internal/format_list_chart/toplist", LinkType.FORMAT_LIST_CHART.ordinal());
        b.addURI(str12, "internal/format_list_data_saver/spotify/playlist/*", LinkType.FORMAT_LIST_DATA_SAVER.ordinal());
        b.addURI(str12, "internal/format_list_data_saver/spotify/user/*/playlist/*", LinkType.FORMAT_LIST_DATA_SAVER.ordinal());
        b.addURI(str12, "internal/format_list_home_mix/spotify/playlist/*", LinkType.FORMAT_LIST_HOME_MIX.ordinal());
        b.addURI(str12, "internal/format_list_home_mix/spotify/user/*", LinkType.FORMAT_LIST_HOME_MIX.ordinal());
        b.addURI(str12, "internal/format_list_home_mix/spotify/user/*/playlist/*", LinkType.FORMAT_LIST_HOME_MIX.ordinal());
        b.addURI(str12, "internal/format_list_personalized_sets/spotify/playlist/*", LinkType.FORMAT_LIST_PERSONALIZED_SETS.ordinal());
        b.addURI(str12, "internal/format_list_personalized_sets/spotify/playlist/*/play", LinkType.FORMAT_LIST_PERSONALIZED_SETS_AUTOPLAY.ordinal());
        b.addURI(str12, "internal/format_list_personalized_sets/spotify/user/*", LinkType.FORMAT_LIST_PERSONALIZED_SETS.ordinal());
        b.addURI(str12, "internal/format_list_personalized_sets/spotify/user/*/playlist/*", LinkType.FORMAT_LIST_PERSONALIZED_SETS.ordinal());
        b.addURI(str12, "internal/format_list_personalized_sets/spotify/user/*/playlist/*/play", LinkType.FORMAT_LIST_PERSONALIZED_SETS_AUTOPLAY.ordinal());
        b.addURI(str12, "internal/format_list_personalized_sets/spotify/user/*/playlist/*/play/track/*", LinkType.FORMAT_LIST_PERSONALIZED_SETS_AUTOPLAY.ordinal());
        b.addURI(str12, "internal/format_list_personalized_sets/spotify/user/*/top/tracks", LinkType.FORMAT_LIST_PERSONALIZED_SETS.ordinal());
        b.addURI(str12, "internal/format_list_personalized_sets/spotify/user/*/toplist", LinkType.FORMAT_LIST_PERSONALIZED_SETS.ordinal());
        b.addURI(str12, "internal/format_list_personalized_sets/toplist", LinkType.FORMAT_LIST_PERSONALIZED_SETS.ordinal());
        b.addURI(str12, "internal/gaia", LinkType.CONNECT.ordinal());
        b.addURI(str12, "internal/gaia-onboarding-disabled", LinkType.CONNECT_ONBOARDING_CONTROL.ordinal());
        b.addURI(str12, "internal/gaia-onboarding-popup", LinkType.CONNECT_ONBOARDING_POPUP.ordinal());
        b.addURI(str12, "internal/gaia-onboarding-popup-educational", LinkType.CONNECT_ONBOARDING_POPUP_EDUCATIONAL.ordinal());
        b.addURI(str12, "internal/gaia-picker", LinkType.CONNECT_DEVICE_PICKER.ordinal());
        b.addURI(str12, "internal/gaia-picker-device-menu", LinkType.CONNECT_DEVICE_PICKER_MENU.ordinal());
        b.addURI(str12, "internal/gaia-popup", LinkType.CONNECT_TRANSFER_POPUP.ordinal());
        b.addURI(str12, "internal/hidden-content", LinkType.LIKES_HIDDEN_CONTENT.ordinal());
        b.addURI(str12, "internal/home", LinkType.HOME_ROOT.ordinal());
        b.addURI(str12, "internal/language-aware-onboarding", LinkType.LANGUAGE_AWARE_ONBOARDING.ordinal());
        b.addURI(str12, "internal/licenses", LinkType.LICENSES.ordinal());
        b.addURI(str12, "internal/local_files_import", LinkType.LOCAL_FILES_IMPORT.ordinal());
        b.addURI(str12, "internal/local_files_import/albums", LinkType.LOCAL_FILES_IMPORT_ALBUMS.ordinal());
        b.addURI(str12, "internal/local_files_import/artists", LinkType.LOCAL_FILES_IMPORT_ARTISTS.ordinal());
        b.addURI(str12, "internal/local_files_import/folders", LinkType.LOCAL_FILES_IMPORT_FOLDERS.ordinal());
        b.addURI(str12, "internal/local_files_import/songs", LinkType.LOCAL_FILES_IMPORT_SONGS.ordinal());
        b.addURI(str12, "internal/mo/precached-playlist", LinkType.MO_PRECACHED_PLAYLIST.ordinal());
        b.addURI(str12, "internal/mo/precached-playlists", LinkType.MO_PRECACHED_PLAYLISTS.ordinal());
        b.addURI(str12, "internal/notification", LinkType.NOTIFICATION.ordinal());
        b.addURI(str12, "internal/notification_webview/*", LinkType.PUSH_NOTIFICATION_WEBVIEW.ordinal());
        b.addURI(str12, "internal/playlist-entity-example/spotify/playlist/*", LinkType.PLAYLIST_ENTITY_EXAMPLE.ordinal());
        b.addURI(str12, "internal/playlist-entity-example/spotify/user/*/playlist/*", LinkType.PLAYLIST_ENTITY_EXAMPLE.ordinal());
        b.addURI(str12, "internal/podcast/episode/*", LinkType.PODCAST_EPISODE.ordinal());
        b.addURI(str12, "internal/podcast/*", LinkType.SHOW_PODCAST.ordinal());
        b.addURI(str12, "internal/podcast-onboarding", LinkType.PODCAST_ONBOARDING.ordinal());
        b.addURI(str12, "internal/preferences", LinkType.CONFIG.ordinal());
        b.addURI(str12, "internal/preferences/content_languages", LinkType.CONFIG_CONTENT_LANGUAGES.ordinal());
        b.addURI(str12, "internal/preferences/push_notification", LinkType.CONFIG_PUSH_NOTIFICATION.ordinal());
        b.addURI(str12, "internal/preferences/storage", LinkType.CONFIG_STORAGE.ordinal());
        b.addURI(str12, "internal/premium_signup", LinkType.PREMIUM_SIGNUP.ordinal());
        b.addURI(str12, "internal/push_notification", LinkType.PUSH_NOTIFICATION.ordinal());
        b.addURI(str12, "internal/radio", LinkType.RADIO_ROOT.ordinal());
        b.addURI(str12, "internal/recent-shares", LinkType.RECENT_SHARES.ordinal());
        b.addURI(str12, "internal/service", LinkType.SPOTIFY_SERVICE.ordinal());
        b.addURI(str12, "internal/startpage", LinkType.HOME_ROOT.ordinal());
        b.addURI(str12, "internal/taste/artist", LinkType.TASTE_ARTIST.ordinal());
        b.addURI(str12, "internal/taste/genre", LinkType.TASTE_GENRE.ordinal());
        b.addURI(str12, "internal/taste/mixing", LinkType.TASTE_MIXING.ordinal());
        b.addURI(str12, "internal/taste-onboarding", LinkType.TASTE_ONBOARDING.ordinal());
        b.addURI(str12, "internal/taste-onboarding-tracks", LinkType.TASTE_ONBOARDING_TRACKS.ordinal());
        b.addURI(str12, "internal/taste-onboarding-update", LinkType.TASTE_ONBOARDING_UPDATE.ordinal());
        b.addURI(str12, "internal/top-podcasts-page-v2", LinkType.BROWSE_TOPPODCAST.ordinal());
        b.addURI(str12, "internal/video/episode/*", LinkType.VIDEO_EPISODE.ordinal());
        b.addURI(str12, "internal/video/*", LinkType.SHOW_VIDEO.ordinal());
        b.addURI(str12, "internal/video_debug", LinkType.VIDEO_DEBUG.ordinal());
        b.addURI(str12, "intro/permissions", LinkType.TERMS_AND_CONDITIONS_PERMISSIONS.ordinal());
        b.addURI(str12, "intro/tos/dialog", LinkType.TERMS_AND_CONDITIONS_TOS.ordinal());
        b.addURI(str12, "intro/tos/text", LinkType.TERMS_AND_CONDITIONS_TOS_TEXT.ordinal());
        b.addURI(str12, "invite/confirmation", LinkType.INVITE_CONFIRMATION.ordinal());
        b.addURI(str12, "invite/have-invite", LinkType.INVITE_HAVE.ordinal());
        b.addURI(str12, "invite/request-invite", LinkType.INVITE_REQUEST.ordinal());
        b.addURI(str12, "invite/start", LinkType.INVITE_START.ordinal());
        b.addURI(str12, "licenses", LinkType.LICENSES.ordinal());
        b.addURI(str12, "link/*", LinkType.BROWSE_LINK.ordinal());
        b.addURI(str12, "listening-history", LinkType.LISTENING_HISTORY.ordinal());
        b.addURI(str12, "live/*", LinkType.LIVE_EVENT.ordinal());
        b.addURI(str12, "local/*", LinkType.TRACK.ordinal());
        b.addURI(str12, "local/*/*", LinkType.TRACK.ordinal());
        b.addURI(str12, "local/*/*/*", LinkType.TRACK.ordinal());
        b.addURI(str12, "local/*/*/*/*", LinkType.TRACK.ordinal());
        b.addURI(str12, "local/*/*/*/*/*", LinkType.TRACK.ordinal());
        b.addURI(str12, "login/disable_offline_mode", LinkType.DISABLE_OFFLINE_MODE.ordinal());
        b.addURI(str12, "login/facebook", LinkType.LOGIN_FACEBOOK.ordinal());
        b.addURI(str12, "login/google", LinkType.LOGIN_GOOGLE.ordinal());
        b.addURI(str12, "login/prelaunch-interest", LinkType.LOGIN_PRELAUNCH_INTEREST.ordinal());
        b.addURI(str12, "login/welcome", LinkType.LOGIN_WELCOME.ordinal());
        b.addURI(str12, "made-for-you", LinkType.MADE_FOR_YOU_HUB.ordinal());
        b.addURI(str12, "main", LinkType.MAIN.ordinal());
        b.addURI(str12, "media_service", LinkType.MEDIA_SERVICE.ordinal());
        b.addURI(str12, "mixify/*", LinkType.MIXIFY.ordinal());
        b.addURI(str12, "navigation", LinkType.NAVIGATION.ordinal());
        b.addURI(str12, "navigation-apps/settings", LinkType.NAVIGATION_APPS_SETTINGS.ordinal());
        b.addURI(str12, "new-releases", LinkType.BROWSE_RELEASES.ordinal());
        b.addURI(str12, "new-releases-feed", LinkType.NEW_RELEASES_FEED.ordinal());
        b.addURI(str12, "now-playing", LinkType.PLAY_NOWPLAYING.ordinal());
        b.addURI(str12, "now-playing-bar", LinkType.PLAYER_BAR.ordinal());
        b.addURI(str12, "now-playing-view", LinkType.PLAYER_VIEW.ordinal());
        b.addURI(str12, "nux/login-signup", LinkType.LOGIN_START.ordinal());
        b.addURI(str12, "offline-library", LinkType.COLLECTION_OFFLINE_LIBRARY.ordinal());
        b.addURI(str12, "offline_sync_error", LinkType.OFFLINE_SYNC_ERROR.ordinal());
        b.addURI(str12, "open", LinkType.ACTIVATE.ordinal());
        b.addURI(str12, "page/*", LinkType.BROWSE_HUBS.ordinal());
        b.addURI(str12, "playlist/*", LinkType.PLAYLIST_V2.ordinal());
        b.addURI(str12, "playlist/*/play", LinkType.PLAYLIST_V2_AUTOPLAY.ordinal());
        b.addURI(str12, "playlist/*/play/episode/*", LinkType.PLAYLIST_V2_AUTOPLAY.ordinal());
        b.addURI(str12, "playlist/*/play/track/*", LinkType.PLAYLIST_V2_AUTOPLAY.ordinal());
        b.addURI(str12, "playlist/*/play/*", LinkType.PLAYLIST_V2_AUTOPLAY.ordinal());
        b.addURI(str12, "playlists", LinkType.COLLECTION_ROOTLIST.ordinal());
        b.addURI(str12, "premium/activation", LinkType.PREMIUM_ACTIVATION_CARD.ordinal());
        b.addURI(str12, "premium-destination", LinkType.PREMIUM_IN_APP_DESTINATION.ordinal());
        b.addURI(str12, "premiumhub", LinkType.PREMIUM_HUB.ordinal());
        b.addURI(str12, "privacy-policy", LinkType.LEGAL_PRIVACYPOLICY.ordinal());
        b.addURI(str12, "queue", LinkType.QUEUE.ordinal());
        b.addURI(str12, "radio", LinkType.RADIO_ROOT.ordinal());
        b.addURI(str12, "radio/album/*", LinkType.ALBUM_RADIO.ordinal());
        b.addURI(str12, "radio/artist/*", LinkType.ARTIST_RADIO.ordinal());
        b.addURI(str12, "radio/genre/*", LinkType.GENRE_RADIO.ordinal());
        b.addURI(str12, "radio/playlist/*", LinkType.PLAYLIST_RADIO.ordinal());
        b.addURI(str12, "radio/track/*", LinkType.TRACK_RADIO.ordinal());
        b.addURI(str12, "radio/user/*/playlist/*", LinkType.USER_PLAYLIST_RADIO.ordinal());
        b.addURI(str12, "radio/user/*/top/tracks", LinkType.USER_PLAYLIST_RADIO.ordinal());
        b.addURI(str12, "radio/user/*/toplist", LinkType.USER_PLAYLIST_RADIO.ordinal());
        b.addURI(str12, "radio/user/*/*/*", LinkType.USER_PLAYLIST_RADIO.ordinal());
        b.addURI(str12, "remote-control", LinkType.REMOTE_CONTROL.ordinal());
        b.addURI(str12, "remoteconfiguration", LinkType.REMOTE_CONFIGURATION.ordinal());
        b.addURI(str12, "remove_all_episodes", LinkType.REMOVE_ALL_EPISODES.ordinal());
        b.addURI(str12, "running", LinkType.RUNNING_ROOT.ordinal());
        b.addURI(str12, "running/category/*", LinkType.RUNNING_CATEGORIES.ordinal());
        b.addURI(str12, "running/original-content/*", LinkType.RUNNING_ORIGINAL_CONTENT.ordinal());
        b.addURI(str12, "sd_storage_alert_dialog", LinkType.SD_STORAGE_ALERT_DIALOG.ordinal());
        b.addURI(str12, "search", LinkType.SEARCH_ROOT.ordinal());
        b.addURI(str12, "search/*", LinkType.SEARCH_ROOT.ordinal());
        b.addURI(str12, "search/*", LinkType.SEARCH_QUERY.ordinal());
        b.addURI(str12, "search/*/*", LinkType.SEARCH_ROOT.ordinal());
        b.addURI(str12, "share", LinkType.SHARE.ordinal());
        b.addURI(str12, "share/spotify", LinkType.SHARE_SPOTIFY.ordinal());
        b.addURI(str12, "show/*", LinkType.SHOW_SHOW.ordinal());
        b.addURI(str12, "shows", LinkType.SHOW_ROOT.ordinal());
        b.addURI(str12, "signup-v1/login", LinkType.SIGNUP_V1_LOGIN.ordinal());
        b.addURI(str12, "signup-v1/signup", LinkType.SIGNUP_V1_SIGNUP.ordinal());
        b.addURI(str12, "signup-v1/start", LinkType.SIGNUP_V1_START.ordinal());
        b.addURI(str12, "socialsession/*", LinkType.SOCIALSESSION.ordinal());
        b.addURI(str12, "space/*", LinkType.BROWSE_HUBS.ordinal());
        b.addURI(str12, "special/*", LinkType.SPECIAL.ordinal());
        b.addURI(str12, "special/*/*", LinkType.SPECIAL.ordinal());
        b.addURI(str12, "special/*/*/*", LinkType.SPECIAL.ordinal());
        b.addURI(str12, "special/*/*/*/*", LinkType.SPECIAL.ordinal());
        b.addURI(str12, "special/*/*/*/*/*", LinkType.SPECIAL.ordinal());
        b.addURI(str12, str10, LinkType.SPOTIFY.ordinal());
        b.addURI(str12, "start_trial_upsell", LinkType.START_TRIAL_UPSELL.ordinal());
        b.addURI(str12, "startpage", LinkType.HOME_ROOT.ordinal());
        b.addURI(str12, "station/album/*", LinkType.RADIO_ALBUM.ordinal());
        b.addURI(str12, "station/artist/*", LinkType.RADIO_ARTIST.ordinal());
        b.addURI(str12, "station/genre/*", LinkType.RADIO_GENRE.ordinal());
        b.addURI(str12, "station/playlist/*", LinkType.STATION_PLAYLIST_V2.ordinal());
        b.addURI(str12, "station/track/*", LinkType.RADIO_TRACK.ordinal());
        b.addURI(str12, "station/user/*/cluster/*", LinkType.STATION_CLUSTER.ordinal());
        b.addURI(str12, "station/user/*/clusters", LinkType.CLUSTER_STATIONS_ROOT.ordinal());
        b.addURI(str12, "station/user/*/playlist/*", LinkType.RADIO_PLAYLIST.ordinal());
        b.addURI(str12, "station/user/*/top/tracks", LinkType.RADIO_PLAYLIST.ordinal());
        b.addURI(str12, "station/user/*/toplist", LinkType.RADIO_PLAYLIST.ordinal());
        b.addURI(str12, "station/user/*/*", LinkType.STATION.ordinal());
        b.addURI(str12, "station/*", LinkType.STATION.ordinal());
        b.addURI(str12, "station/*/*", LinkType.STATION.ordinal());
        b.addURI(str12, "station/*/*/*", LinkType.STATION.ordinal());
        b.addURI(str12, "station/*/*/*/*", LinkType.STATION.ordinal());
        b.addURI(str12, "stations-promo", LinkType.STATIONS_PROMO.ordinal());
        b.addURI(str12, "terms", LinkType.LEGAL_TERMS.ordinal());
        b.addURI(str12, "together", LinkType.TOGETHER.ordinal());
        b.addURI(str12, "top-podcasts-page-v2", LinkType.BROWSE_TOPPODCAST.ordinal());
        b.addURI(str12, str11, LinkType.TOPLIST.ordinal());
        b.addURI(str12, "track/*", LinkType.TRACK.ordinal());
        b.addURI(str12, "track/*/play", LinkType.TRACK_AUTOPLAY.ordinal());
        b.addURI(str12, "trial_reminder", LinkType.TRIAL_REMINDER.ordinal());
        b.addURI(str12, "trial_reminder/spotify_free", LinkType.TRIAL_REMINDER_SPOTIFY_FREE.ordinal());
        b.addURI(str12, "update", LinkType.UPDATE.ordinal());
        b.addURI(str12, "upsell", LinkType.UPSELL.ordinal());
        b.addURI(str12, "upsell/activating_trial", LinkType.UPSELL_ACTIVATING_TRIAL.ordinal());
        b.addURI(str12, "upsell/capping_reached", LinkType.UPSELL_CAPPING_REACHED.ordinal());
        b.addURI(str12, "upsell/choose_extreme_quality", LinkType.UPSELL_EXTREME_QUALITY.ordinal());
        b.addURI(str12, "upsell/confirm_consumable", LinkType.UPSELL_CONFIRM_CONSUMABLE.ordinal());
        b.addURI(str12, "upsell/content-unavailable", LinkType.UPSELL_CONTENT_UNAVAILABLE.ordinal());
        b.addURI(str12, "upsell/interstitial/end_of_trial", LinkType.UPSELL_INTERSTITIAL_END_OF_TRIAL.ordinal());
        b.addURI(str12, "upsell/no_offline", LinkType.UPSELL_NO_OFFLINE.ordinal());
        b.addURI(str12, "upsell/no_queue", LinkType.UPSELL_NO_QUEUE.ordinal());
        b.addURI(str12, "upsell/no_streaming", LinkType.UPSELL_NO_STREAMING.ordinal());
        b.addURI(str12, "upsell/out_of_skips", LinkType.UPSELL_OUT_OF_SKIPS.ordinal());
        b.addURI(str12, "upsell/out_of_skips_consumables", LinkType.UPSELL_OUT_OF_SKIPS_CONSUMABLES.ordinal());
        b.addURI(str12, "upsell/out_of_skips_plus", LinkType.UPSELL_OUT_OF_SKIPS_PLUS.ordinal());
        b.addURI(str12, "upsell/premium_in_app_destination", LinkType.PREMIUM_IN_APP_DESTINATION.ordinal());
        b.addURI(str12, "upsell/premium_only", LinkType.UPSELL_PREMIUM_ONLY.ordinal());
        b.addURI(str12, "upsell/showcase", LinkType.UPSELL_SHOWCASE.ordinal());
        b.addURI(str12, "upsell/start_trial", LinkType.START_TRIAL_UPSELL.ordinal());
        b.addURI(str12, "upsell/stuck_in_shuffle", LinkType.UPSELL_STUCK_IN_SHUFFLE.ordinal());
        b.addURI(str12, "upsell/trial-ended", LinkType.UPSELL_TRIAL_ENDED.ordinal());
        b.addURI(str12, "upsell/trial-started", LinkType.UPSELL_TRIAL_STARTED.ordinal());
        b.addURI(str12, "user/*", LinkType.PROFILE.ordinal());
        b.addURI(str12, "user/*/artists", LinkType.PROFILE_ARTISTS.ordinal());
        b.addURI(str12, "user/*/cluster/*", LinkType.CLUSTER.ordinal());
        b.addURI(str12, "user/*/collection", LinkType.COLLECTION_TRACKS.ordinal());
        b.addURI(str12, "user/*/collection/album/*", LinkType.COLLECTION_ALBUM.ordinal());
        b.addURI(str12, "user/*/collection/artist/*", LinkType.COLLECTION_ARTIST.ordinal());
        b.addURI(str12, "user/*/folder/*", LinkType.COLLECTION_PLAYLIST_FOLDER.ordinal());
        b.addURI(str12, "user/*/followers", LinkType.PROFILE_FOLLOWERS.ordinal());
        b.addURI(str12, "user/*/following", LinkType.PROFILE_FOLLOWING.ordinal());
        b.addURI(str12, "user/*/invitationcodes", LinkType.PROFILE_INVITATION_CODES.ordinal());
        b.addURI(str12, "user/*/playlist/*", LinkType.PROFILE_PLAYLIST.ordinal());
        b.addURI(str12, "user/*/playlist/*/play", LinkType.PLAYLIST_AUTOPLAY.ordinal());
        b.addURI(str12, "user/*/playlist/*/play/episode/*", LinkType.PLAYLIST_AUTOPLAY.ordinal());
        b.addURI(str12, "user/*/playlist/*/play/track/*", LinkType.PLAYLIST_AUTOPLAY.ordinal());
        b.addURI(str12, "user/*/playlist/*/play/*", LinkType.PLAYLIST_AUTOPLAY.ordinal());
        b.addURI(str12, "user/*/playlists", LinkType.PROFILE_PLAYLIST_OVERVIEW.ordinal());
        b.addURI(str12, "user/*/top/tracks", LinkType.TOPLIST.ordinal());
        b.addURI(str12, "user/*/toplist", LinkType.TOPLIST.ordinal());
        b.addURI(str12, "video_service", LinkType.VIDEO_SERVICE.ordinal());
        b.addURI(str12, "view/*", LinkType.BROWSE_HUBS.ordinal());
        b.addURI(str12, "voice-assistant", LinkType.VOICE_ASSISTANT_ROOT.ordinal());
        b.addURI(str12, "widget", LinkType.WIDGET.ordinal());
        b.addURI(str12, "wifi_only_upsell", LinkType.WIFI_ONLY_UPSELL.ordinal());
        b.addURI(str12, "wifimft_group3_no_more_time", LinkType.WIFIMFT_GROUP3_NO_MORE_TIME.ordinal());
        b.addURI(str12, "wrapped/datastories", LinkType.WRAPPED_DATA_STORIES.ordinal());
        b.addURI(str12, "wrapped/home", LinkType.WRAPPED_HOME.ordinal());
    }

    public static UriMatcher a() {
        return b;
    }

    public static juc a(LinkType linkType) {
        for (juc juc : a) {
            if (linkType == juc.b) {
                return juc;
            }
        }
        return null;
    }
}
